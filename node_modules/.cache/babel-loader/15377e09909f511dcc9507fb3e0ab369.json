{"ast":null,"code":"var _jsxFileName = \"/Users/thieunguyen/Desktop/Project/ReactJS/web-ets-2020/src/containers/Part1/index.tsx\";\nimport Screen from '../Screen';\nimport React, { useState, useEffect } from 'react';\nimport { FlatList } from 'react-native';\nimport styled from 'styled-components/native';\nimport Fonts from '../../theme/fonts';\nimport Colors from '../../theme/colors';\nimport { useHistory, useParams } from 'react-router-dom';\nimport textAPI from \"../../api/textAPI\";\nimport CryptoJS from 'crypto-js';\nimport Part1Item from './shared/Part1Item';\nconst ButtonText = styled(Fonts.Bold)`\n  font-size: 18px;\n  background-color: ${Colors.BACKGROUND_COLOR};\n  margin: 10px;\n  padding: 10px;\n`;\nconst TestFlatList = styled(FlatList)`\n  width: 100%;\n  height: 100%;\n`;\n\nconst Part1 = () => {\n  const history = useHistory();\n  const {\n    testNumber\n  } = useParams();\n  const [testList, setTestList] = useState([]);\n  useEffect(() => {\n    try {\n      textAPI.get(testNumber, 1).then(data => {\n        const plainData = CryptoJS.AES.decrypt(data, 'thieumao').toString(CryptoJS.enc.Utf8);\n        const json = JSON.parse(plainData);\n        setTestList(json);\n      });\n    } catch (error) {}\n  }, []);\n\n  const renderItem = ({\n    index\n  }) => {\n    const item = testList[index];\n    return /*#__PURE__*/React.createElement(Part1Item, {\n      item: item,\n      index: index,\n      visibleIndex: 1,\n      onClickA: () => console.log('A'),\n      onClickB: () => console.log('B'),\n      onClickC: () => console.log('C'),\n      onClickD: () => console.log('D'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Screen, {\n    canBack: true,\n    title: `Test ${testNumber} - Part 1`,\n    showMenu: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TestFlatList, {\n    data: testList,\n    renderItem: renderItem,\n    keyExtractor: (item, index) => `${index}_${item}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default Part1;","map":{"version":3,"sources":["/Users/thieunguyen/Desktop/Project/ReactJS/web-ets-2020/src/containers/Part1/index.tsx"],"names":["Screen","React","useState","useEffect","FlatList","styled","Fonts","Colors","useHistory","useParams","textAPI","CryptoJS","Part1Item","ButtonText","Bold","BACKGROUND_COLOR","TestFlatList","Part1","history","testNumber","testList","setTestList","get","then","data","plainData","AES","decrypt","toString","enc","Utf8","json","JSON","parse","error","renderItem","index","item","console","log"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,WAAnB;AACA,OAAOC,KAAP,IAAoBC,QAApB,EAA8BC,SAA9B,QAA+C,OAA/C;AACA,SAASC,QAAT,QAAqC,cAArC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,kBAAtC;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AAEA,MAAMC,UAAU,GAAGR,MAAM,CAACC,KAAK,CAACQ,IAAP,CAAa;;sBAEhBP,MAAM,CAACQ,gBAAiB;;;CAF9C;AAOA,MAAMC,YAAY,GAAGX,MAAM,CAACD,QAAD,CAAyC;;;CAApE;;AAKA,MAAMa,KAAS,GAAG,MAAM;AACtB,QAAMC,OAAO,GAAGV,UAAU,EAA1B;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAiBV,SAAS,EAAhC;AAEA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAAQ,EAAR,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI;AACFO,MAAAA,OAAO,CAACY,GAAR,CAAYH,UAAZ,EAAwB,CAAxB,EAA2BI,IAA3B,CAAgCC,IAAI,IAAI;AACtC,cAAMC,SAAS,GAAGd,QAAQ,CAACe,GAAT,CAAaC,OAAb,CAAqBH,IAArB,EAA2B,UAA3B,EAAuCI,QAAvC,CAAgDjB,QAAQ,CAACkB,GAAT,CAAaC,IAA7D,CAAlB;AACA,cAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWR,SAAX,CAAb;AACAJ,QAAAA,WAAW,CAACU,IAAD,CAAX;AACD,OAJD;AAKD,KAND,CAME,OAAOG,KAAP,EAAc,CAAE;AACnB,GARQ,EAQN,EARM,CAAT;;AAUA,QAAMC,UAAU,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAgC;AACjD,UAAMC,IAAI,GAAGjB,QAAQ,CAACgB,KAAD,CAArB;AACA,wBACE,oBAAC,SAAD;AACE,MAAA,IAAI,EAAEC,IADR;AAEE,MAAA,KAAK,EAAED,KAFT;AAGE,MAAA,YAAY,EAAE,CAHhB;AAIE,MAAA,QAAQ,EAAE,MAAME,OAAO,CAACC,GAAR,CAAY,GAAZ,CAJlB;AAKE,MAAA,QAAQ,EAAE,MAAMD,OAAO,CAACC,GAAR,CAAY,GAAZ,CALlB;AAME,MAAA,QAAQ,EAAE,MAAMD,OAAO,CAACC,GAAR,CAAY,GAAZ,CANlB;AAOE,MAAA,QAAQ,EAAE,MAAMD,OAAO,CAACC,GAAR,CAAY,GAAZ,CAPlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAWD,GAbD;;AAeA,sBACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,MAAf;AAAgB,IAAA,KAAK,EAAG,QAAOpB,UAAW,WAA1C;AAAsD,IAAA,QAAQ,MAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AACE,IAAA,IAAI,EAAEC,QADR;AAEE,IAAA,UAAU,EAAEe,UAFd;AAGE,IAAA,YAAY,EAAE,CAACE,IAAD,EAAOD,KAAP,KAAkB,GAAEA,KAAM,IAAGC,IAAK,EAHlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADJ;AASD,CAxCD;;AA0CA,eAAepB,KAAf","sourcesContent":["import Screen from '../Screen';\nimport React, { FC, useState, useEffect } from 'react';\nimport { FlatList, Dimensions } from 'react-native';\nimport styled from 'styled-components/native';\nimport Fonts from '../../theme/fonts';\nimport Colors from '../../theme/colors';\nimport { useHistory, useParams } from 'react-router-dom';\nimport textAPI from \"../../api/textAPI\";\nimport CryptoJS from 'crypto-js';\nimport Part1Item from './shared/Part1Item';\n\nconst ButtonText = styled(Fonts.Bold)`\n  font-size: 18px;\n  background-color: ${Colors.BACKGROUND_COLOR};\n  margin: 10px;\n  padding: 10px;\n`;\n\nconst TestFlatList = styled(FlatList as new () => FlatList<string>)`\n  width: 100%;\n  height: 100%;\n`;\n\nconst Part1: FC = () => {\n  const history = useHistory();\n  const { testNumber } = useParams();\n\n  const [testList, setTestList] = useState<any[]>([]);\n\n  useEffect(() => {\n    try {\n      textAPI.get(testNumber, 1).then(data => {\n        const plainData = CryptoJS.AES.decrypt(data, 'thieumao').toString(CryptoJS.enc.Utf8);\n        const json = JSON.parse(plainData);\n        setTestList(json);\n      });\n    } catch (error) {}\n  }, []);\n\n  const renderItem = ({ index }: { item; index }) => {\n    const item = testList[index];\n    return (\n      <Part1Item\n        item={item}\n        index={index}\n        visibleIndex={1}\n        onClickA={() => console.log('A')}\n        onClickB={() => console.log('B')}\n        onClickC={() => console.log('C')}\n        onClickD={() => console.log('D')}\n      />\n    );\n  };\n\n  return (\n      <Screen canBack title={`Test ${testNumber} - Part 1`} showMenu>\n        <TestFlatList\n          data={testList}\n          renderItem={renderItem}\n          keyExtractor={(item, index) => `${index}_${item}`}\n        />\n      </Screen>\n  );\n};\n\nexport default Part1;\n"]},"metadata":{},"sourceType":"module"}