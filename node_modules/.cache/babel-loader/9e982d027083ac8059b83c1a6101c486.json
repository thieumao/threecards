{"ast":null,"code":"var _jsxFileName = \"/Users/thieunguyen/Desktop/Project/ReactJS/web-ets-2020/src/containers/Part4/shared/Part4Item.tsx\";\nimport React, { memo } from 'react';\nimport { Dimensions, FlatList } from 'react-native';\nimport styled from 'styled-components/native';\nimport Fonts from '../../../theme/fonts';\nimport Colors from '../../../theme/colors';\nimport QuestionItem from './QuestionItem';\nimport RawHTML from '../../../components/RawHTML';\nconst ScrollView = styled.ScrollView`\n  padding-horizontal: 4px;\n`;\nconst ItemContainer = styled.View`\n  width: 100%;\n  background-color: ${Colors.SECOND_COLOR};\n`;\nconst Text = styled(Fonts.Bold)`\n  font-size: 18px;\n  padding: 8px;\n`;\nconst TestFlatList = styled(FlatList)`\n  width: 100%;\n  height: 100%;\n`;\nconst ListContainer = styled.View`\n  height: 100%;\n  width: 100%;  \n  padding-vertical: 8px;\n`;\nconst Space = styled.View`\n  background-color: ${Colors.MAIN_COLOR};\n  width: 100%;\n  height: 1px;\n  margin-top: 12px;\n`;\nconst Button = styled.TouchableOpacity`\n  justify-content: center;\n  align-items: flex-end;\n  padding-horizontal: 4px;\n`;\nconst EmptyView = styled.View`\n  width: 100%;\n  height: 100%;\n`;\nconst HTMLContainer = styled.View`\n  padding: 12px;\n`;\n\nconst Part4Item = ({\n  data,\n  part4Index,\n  onSelectAnswer,\n  onCollapse,\n  onCollapseTranslation\n}) => {\n  const selectAnswer = (item, index, selected) => {\n    onSelectAnswer(item, index, selected, part4Index);\n  };\n\n  const onClickA = (item, index, selected) => {\n    selectAnswer(item, index, selected);\n  };\n\n  const onClickB = (item, index, selected) => {\n    selectAnswer(item, index, selected);\n  };\n\n  const onClickC = (item, index, selected) => {\n    selectAnswer(item, index, selected);\n  };\n\n  const onClickD = (item, index, selected) => {\n    selectAnswer(item, index, selected);\n  };\n\n  const renderItem = ({\n    index\n  }) => {\n    const item = data.questions[index];\n    const screenWidth = Dimensions.get('window').width;\n    return /*#__PURE__*/React.createElement(QuestionItem, {\n      item: item,\n      index: index,\n      onClick: selectAnswer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(ItemContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, `${part4Index + 1}/ ${data.data.title || ''}`), /*#__PURE__*/React.createElement(Space, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }), !data.isCollapsed && /*#__PURE__*/React.createElement(HTMLContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(RawHTML, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, data.data.html)), data.isShownTranslate && /*#__PURE__*/React.createElement(Space, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 35\n    }\n  }), data.isShownTranslate && !data.isCollapsedTranslation && /*#__PURE__*/React.createElement(RawHTML, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 67\n    }\n  }, data.translate.value), /*#__PURE__*/React.createElement(Space, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ListContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TestFlatList, {\n    data: data.questions,\n    renderItem: renderItem,\n    keyExtractor: (item, index) => `${index}_${item.question}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default memo(Part4Item);","map":{"version":3,"sources":["/Users/thieunguyen/Desktop/Project/ReactJS/web-ets-2020/src/containers/Part4/shared/Part4Item.tsx"],"names":["React","memo","Dimensions","FlatList","styled","Fonts","Colors","QuestionItem","RawHTML","ScrollView","ItemContainer","View","SECOND_COLOR","Text","Bold","TestFlatList","ListContainer","Space","MAIN_COLOR","Button","TouchableOpacity","EmptyView","HTMLContainer","Part4Item","data","part4Index","onSelectAnswer","onCollapse","onCollapseTranslation","selectAnswer","item","index","selected","onClickA","onClickB","onClickC","onClickD","renderItem","questions","screenWidth","get","width","title","isCollapsed","html","isShownTranslate","isCollapsedTranslation","translate","value","question"],"mappings":"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","sourcesContent":["import React, { FC, memo } from 'react';\nimport { Dimensions, FlatList } from 'react-native';\nimport styled from 'styled-components/native';\nimport Fonts from '../../../theme/fonts';\nimport Colors from '../../../theme/colors';\nimport QuestionItem from './QuestionItem';\nimport RawHTML from '../../../components/RawHTML';\n\ninterface Props {\n  data: any;\n  part4Index: number;\n  onSelectAnswer: (detailItem: any, questionPosition: number, selected: string, part4Index: number) => void;\n  onCollapse: (part4Index: number) => void;\n  onCollapseTranslation: (part4Index: number) => void;\n}\n\ninterface StyledProps {\n  height?: number;\n  width?: number;\n  marginHorizontal?: number;\n  paddingHorizontal?: number;\n  paddingRight?: number;\n  isCorrect?: boolean;\n  isSelected?: boolean;\n  isShown?: boolean;\n}\n\ninterface ItemType {\n  id: number;\n  a: string;\n  b: string;\n  c: string;\n  d: string;\n  correct: string;\n  question: string;\n  selected?: string;\n  submitted?: boolean;\n}\n\nconst ScrollView = styled.ScrollView`\n  padding-horizontal: 4px;\n`;\n\nconst ItemContainer = styled.View<StyledProps>`\n  width: 100%;\n  background-color: ${Colors.SECOND_COLOR};\n`;\n\nconst Text = styled(Fonts.Bold)`\n  font-size: 18px;\n  padding: 8px;\n`;\n\nconst TestFlatList = styled(FlatList as new () => FlatList<ItemType>)`\n  width: 100%;\n  height: 100%;\n`;\n\nconst ListContainer = styled.View`\n  height: 100%;\n  width: 100%;  \n  padding-vertical: 8px;\n`;\n\nconst Space = styled.View<StyledProps>`\n  background-color: ${Colors.MAIN_COLOR};\n  width: 100%;\n  height: 1px;\n  margin-top: 12px;\n`;\n\nconst Button = styled.TouchableOpacity`\n  justify-content: center;\n  align-items: flex-end;\n  padding-horizontal: 4px;\n`;\n\nconst EmptyView = styled.View`\n  width: 100%;\n  height: 100%;\n`;\n\nconst HTMLContainer = styled.View`\n  padding: 12px;\n`;\n\nconst Part4Item: FC<Props> = ({\n  data,\n  part4Index,\n  onSelectAnswer,\n  onCollapse,\n  onCollapseTranslation,\n}) => {\n  const selectAnswer = (item: any, index: number, selected: string) => {\n    onSelectAnswer(item, index, selected, part4Index);\n  };\n\n  const onClickA = (item: any, index: number, selected: string) => {\n    selectAnswer(item, index, selected);\n  };\n\n  const onClickB = (item: any, index: number, selected: string) => {\n    selectAnswer(item, index, selected);\n  };\n\n  const onClickC = (item: any, index: number, selected: string) => {\n    selectAnswer(item, index, selected);\n  };\n\n  const onClickD = (item: any, index: number, selected: string) => {\n    selectAnswer(item, index, selected);\n  };\n\n  const renderItem = ({ index }: { item: ItemType; index: number }) => {\n    const item = data.questions[index];\n    const screenWidth = Dimensions.get('window').width;\n    return (\n      <QuestionItem\n        item={item}\n        index={index}\n        onClick={selectAnswer}\n      />\n    );\n  };\n\n  return (\n    <ItemContainer>\n        <Text>{`${part4Index + 1}/ ${data.data.title || ''}`}</Text>\n        <Space />\n        {!data.isCollapsed && (\n          <HTMLContainer>\n            <RawHTML>{data.data.html}</RawHTML>\n          </HTMLContainer>\n        )}\n        {data.isShownTranslate && <Space />}\n        {data.isShownTranslate && !data.isCollapsedTranslation && <RawHTML>{data.translate.value}</RawHTML>}\n        <Space />\n        <ListContainer>\n          <TestFlatList\n            data={data.questions}\n            renderItem={renderItem}\n            keyExtractor={(item, index) => `${index}_${item.question}`}\n          />\n        </ListContainer>\n    </ItemContainer>\n  );\n};\n\nexport default memo(Part4Item);\n"]},"metadata":{},"sourceType":"module"}