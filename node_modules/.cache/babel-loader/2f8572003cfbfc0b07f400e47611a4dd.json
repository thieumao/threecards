{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/thieunguyen/Desktop/Project/ReactJS/web-ets-2020/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject12(){var data=_taggedTemplateLiteral([\"\\n  font-size: 16px;\\n  background-color: \",\";\\n  padding: 12px;\\n\"]);_templateObject12=function _templateObject12(){return data;};return data;}function _templateObject11(){var data=_taggedTemplateLiteral([\"\\n  font-size: 14px;\\n  background-color: \",\";\\n  color: \",\";\\n  flex: 1;\\n\"]);_templateObject11=function _templateObject11(){return data;};return data;}function _templateObject10(){var data=_taggedTemplateLiteral([\"\\n  flex-direction: row;\\n  justify-content: center;\\n  align-items: center;\\n  padding-left: 8px;\\n  padding-right: 2px;\\n\"]);_templateObject10=function _templateObject10(){return data;};return data;}function _templateObject9(){var data=_taggedTemplateLiteral([\"\\n  margin-horizontal: 2px;\\n  padding-vertical: 4px;\\n\"]);_templateObject9=function _templateObject9(){return data;};return data;}function _templateObject8(){var data=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: 100%;\\n\"]);_templateObject8=function _templateObject8(){return data;};return data;}function _templateObject7(){var data=_taggedTemplateLiteral([\"\\n  background-color: white;\\n  justify-content: center;\\n  align-items: center;\\n  box-shadow: 0px 2px;\\n  shadow-color: #000;\\n  shadow-opacity: 0.25;\\n  shadow-radius: 3.84px;\\n  elevation: 5;\\n  width: 80%;\\n  height: 80%;\\n\"]);_templateObject7=function _templateObject7(){return data;};return data;}function _templateObject6(){var data=_taggedTemplateLiteral([\"\\n  flex: 1;\\n  justify-content: center;\\n  align-items: center;\\n\"]);_templateObject6=function _templateObject6(){return data;};return data;}function _templateObject5(){var data=_taggedTemplateLiteral([\"\\n  padding: 8px;\\n  text-align: center;\\n\"]);_templateObject5=function _templateObject5(){return data;};return data;}function _templateObject4(){var data=_taggedTemplateLiteral([\"\\n  padding: 4px;\\n  color: white;\\n  text-align: left;\\n\"]);_templateObject4=function _templateObject4(){return data;};return data;}function _templateObject3(){var data=_taggedTemplateLiteral([\"\\n  background-color: \",\";\\n  padding: 4px;\\n  elevation: 2;\\n  margin-vertical: 12px;\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n  margin-top: 1px;\\n  background-color: \",\";\\n  width: 100%;\\n  height: 1px;\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  padding: 10px;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{memo}from'react';import styled from'styled-components/native';import Colors from'../../theme/colors';import Fonts from'../../theme/fonts';import{FlatList}from'react-native';import Modal from'modal-react-native-web';var Button=styled.TouchableOpacity(_templateObject());var Space=styled.View(_templateObject2(),Colors.MAIN_COLOR);var CloseButton=styled.TouchableOpacity(_templateObject3(),Colors.MAIN_COLOR);var ButtonText=styled(Fonts.Bold)(_templateObject4());var Text=styled(Fonts.Normal)(_templateObject5());var CenteredView=styled.View(_templateObject6());var ModalView=styled.View(_templateObject7());var QuestionFlatList=styled(FlatList)(_templateObject8());var ItemContainer=styled.TouchableOpacity(_templateObject9());var QuestionItem=styled.View(_templateObject10());var ItemText=styled(Fonts.Normal)(_templateObject11(),Colors.BACKGROUND_COLOR,function(props){return props.color;});var TitleText=styled(Fonts.Bold)(_templateObject12(),Colors.BACKGROUND_COLOR);var QuestionListModal=function QuestionListModal(_ref){var modalVisible=_ref.modalVisible,setModalVisible=_ref.setModalVisible;return/*#__PURE__*/React.createElement(Modal,{animationType:\"slide\",transparent:true,visible:modalVisible,onBackdropPress:function onBackdropPress(){return setModalVisible();}},/*#__PURE__*/React.createElement(CenteredView,null,/*#__PURE__*/React.createElement(ModalView,null,/*#__PURE__*/React.createElement(TitleText,null,\"Select Question\"),/*#__PURE__*/React.createElement(CloseButton,{onPress:function onPress(){return setModalVisible();}},/*#__PURE__*/React.createElement(ButtonText,null,\"Close\")))));};export default memo(QuestionListModal);","map":{"version":3,"sources":["/Users/thieunguyen/Desktop/Project/ReactJS/web-ets-2020/src/components/QuestionListModal/index.tsx"],"names":["React","memo","styled","Colors","Fonts","FlatList","Modal","Button","TouchableOpacity","Space","View","MAIN_COLOR","CloseButton","ButtonText","Bold","Text","Normal","CenteredView","ModalView","QuestionFlatList","ItemContainer","QuestionItem","ItemText","BACKGROUND_COLOR","props","color","TitleText","QuestionListModal","modalVisible","setModalVisible"],"mappings":"muFAAA,MAAOA,CAAAA,KAAP,EAAoBC,IAApB,KAAqD,OAArD,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,oBAAnB,CACA,MAAOC,CAAAA,KAAP,KAAkB,mBAAlB,CACA,OAASC,QAAT,KAAyB,cAAzB,CACA,MAAOC,CAAAA,KAAP,KAAkB,wBAAlB,CAkBA,GAAMC,CAAAA,MAAM,CAAGL,MAAM,CAACM,gBAAV,mBAAZ,CAIA,GAAMC,CAAAA,KAAK,CAAGP,MAAM,CAACQ,IAAV,oBAEWP,MAAM,CAACQ,UAFlB,CAAX,CAOA,GAAMC,CAAAA,WAAW,CAAGV,MAAM,CAACM,gBAAV,oBACKL,MAAM,CAACQ,UADZ,CAAjB,CAOA,GAAME,CAAAA,UAAU,CAAGX,MAAM,CAACE,KAAK,CAACU,IAAP,CAAT,oBAAhB,CAMA,GAAMC,CAAAA,IAAI,CAAGb,MAAM,CAACE,KAAK,CAACY,MAAP,CAAT,oBAAV,CAKA,GAAMC,CAAAA,YAAY,CAAGf,MAAM,CAACQ,IAAV,oBAAlB,CAMA,GAAMQ,CAAAA,SAAS,CAAGhB,MAAM,CAACQ,IAAV,oBAAf,CAaA,GAAMS,CAAAA,gBAAgB,CAAGjB,MAAM,CAACG,QAAD,CAAT,oBAAtB,CAKA,GAAMe,CAAAA,aAAa,CAAGlB,MAAM,CAACM,gBAAV,oBAAnB,CAKA,GAAMa,CAAAA,YAAY,CAAGnB,MAAM,CAACQ,IAAV,qBAAlB,CAQA,GAAMY,CAAAA,QAAQ,CAAGpB,MAAM,CAACE,KAAK,CAACY,MAAP,CAAT,qBAEQb,MAAM,CAACoB,gBAFf,CAGH,SAAAC,KAAK,QAAIA,CAAAA,KAAK,CAACC,KAAV,EAHF,CAAd,CAOA,GAAMC,CAAAA,SAAS,CAAGxB,MAAM,CAACE,KAAK,CAACU,IAAP,CAAT,qBAEOX,MAAM,CAACoB,gBAFd,CAAf,CAMA,GAAMI,CAAAA,iBAA4B,CAAG,QAA/BA,CAAAA,iBAA+B,MAAuC,IAApCC,CAAAA,YAAoC,MAApCA,YAAoC,CAAtBC,eAAsB,MAAtBA,eAAsB,CAE1E,mBACE,oBAAC,KAAD,EAAO,aAAa,CAAC,OAArB,CAA6B,WAAW,KAAxC,CAAyC,OAAO,CAAED,YAAlD,CAAgE,eAAe,CAAE,iCAAMC,CAAAA,eAAe,EAArB,EAAjF,eACE,oBAAC,YAAD,mBACE,oBAAC,SAAD,mBACE,oBAAC,SAAD,wBADF,cAEE,oBAAC,WAAD,EAAa,OAAO,CAAE,yBAAMA,CAAAA,eAAe,EAArB,EAAtB,eACE,oBAAC,UAAD,cADF,CAFF,CADF,CADF,CADF,CAYD,CAdD,CAgBA,cAAe5B,CAAAA,IAAI,CAAC0B,iBAAD,CAAnB","sourcesContent":["import React, { FC, memo, useEffect, useState } from 'react';\nimport styled from 'styled-components/native';\nimport Colors from '../../theme/colors';\nimport Fonts from '../../theme/fonts';\nimport { FlatList } from 'react-native';\nimport Modal from 'modal-react-native-web';\n\ninterface Props {\n  modalVisible: boolean;\n  setModalVisible: () => void;\n}\n\ninterface StyledProps {\n  height?: number;\n  width?: number;\n  marginHorizontal?: number;\n  paddidngHorizontal?: number;\n  isCorrect?: boolean;\n  isSelected?: boolean;\n  isShown?: boolean;\n  color?: string;\n}\n\nconst Button = styled.TouchableOpacity`\n  padding: 10px;\n`;\n\nconst Space = styled.View<StyledProps>`\n  margin-top: 1px;\n  background-color: ${Colors.MAIN_COLOR};\n  width: 100%;\n  height: 1px;\n`;\n\nconst CloseButton = styled.TouchableOpacity`\n  background-color: ${Colors.MAIN_COLOR};\n  padding: 4px;\n  elevation: 2;\n  margin-vertical: 12px;\n`;\n\nconst ButtonText = styled(Fonts.Bold)`\n  padding: 4px;\n  color: white;\n  text-align: left;\n`;\n\nconst Text = styled(Fonts.Normal)`\n  padding: 8px;\n  text-align: center;\n`;\n\nconst CenteredView = styled.View`\n  flex: 1;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ModalView = styled.View`\n  background-color: white;\n  justify-content: center;\n  align-items: center;\n  box-shadow: 0px 2px;\n  shadow-color: #000;\n  shadow-opacity: 0.25;\n  shadow-radius: 3.84px;\n  elevation: 5;\n  width: 80%;\n  height: 80%;\n`;\n\nconst QuestionFlatList = styled(FlatList as new () => FlatList<string>)`\n  width: 100%;\n  height: 100%;\n`;\n\nconst ItemContainer = styled.TouchableOpacity`\n  margin-horizontal: 2px;\n  padding-vertical: 4px;\n`;\n\nconst QuestionItem = styled.View`\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  padding-left: 8px;\n  padding-right: 2px;\n`;\n\nconst ItemText = styled(Fonts.Normal)<StyledProps>`\n  font-size: 14px;\n  background-color: ${Colors.BACKGROUND_COLOR};\n  color: ${props => props.color};\n  flex: 1;\n`;\n\nconst TitleText = styled(Fonts.Bold)`\n  font-size: 16px;\n  background-color: ${Colors.BACKGROUND_COLOR};\n  padding: 12px;\n`;\n\nconst QuestionListModal: FC<Props> = ({ modalVisible, setModalVisible }) => {\n\n  return (\n    <Modal animationType=\"slide\" transparent visible={modalVisible} onBackdropPress={() => setModalVisible()}>\n      <CenteredView>\n        <ModalView>\n          <TitleText>Select Question</TitleText>\n          <CloseButton onPress={() => setModalVisible()}>\n            <ButtonText>Close</ButtonText>\n          </CloseButton>\n        </ModalView>\n      </CenteredView>\n    </Modal>\n  );\n};\n\nexport default memo(QuestionListModal);\n"]},"metadata":{},"sourceType":"module"}