{"ast":null,"code":"var _jsxFileName = \"/Users/thieunguyen/Desktop/Project/ReactJS/web-ets-2020/src/containers/Part4/index.tsx\";\nimport Screen from '../Screen';\nimport React, { useState, useEffect } from 'react';\nimport { FlatList } from 'react-native';\nimport styled from 'styled-components/native';\nimport Fonts from '../../theme/fonts';\nimport Colors from '../../theme/colors';\nimport { useHistory, useParams } from 'react-router-dom';\nimport textAPI from \"../../api/textAPI\";\nimport CryptoJS from 'crypto-js';\nimport Part4Item from './shared/Part4Item';\nconst ButtonText = styled(Fonts.Bold)`\n  font-size: 18px;\n  background-color: ${Colors.BACKGROUND_COLOR};\n  margin: 10px;\n  padding: 10px;\n`;\nconst TestFlatList = styled(FlatList)`\n  width: 100%;\n  height: 100%;\n`;\n\nconst Part4 = () => {\n  const history = useHistory();\n  const {\n    testNumber\n  } = useParams();\n  const [testList, setTestList] = useState([]);\n  useEffect(() => {\n    try {\n      textAPI.get(testNumber, 4).then(data => {\n        const plainData = CryptoJS.AES.decrypt(data, 'thieumao').toString(CryptoJS.enc.Utf8);\n        const json = JSON.parse(plainData);\n        console.log('>>>> Part 4');\n        console.log(json);\n        setTestList(json);\n      });\n    } catch (error) {}\n  }, []);\n\n  const renderItem = ({\n    index\n  }) => {\n    const item = testList[index];\n    return /*#__PURE__*/React.createElement(Part4Item, {\n      data: item,\n      part4Index: index,\n      onSelectAnswer: () => null,\n      onCollapse: () => null,\n      onCollapseTranslation: () => null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Screen, {\n    canBack: true,\n    title: `Test ${testNumber} - Part 4`,\n    showMenu: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TestFlatList, {\n    data: testList,\n    renderItem: renderItem,\n    keyExtractor: (item, index) => `${index}_${item}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default Part4;","map":{"version":3,"sources":["/Users/thieunguyen/Desktop/Project/ReactJS/web-ets-2020/src/containers/Part4/index.tsx"],"names":["Screen","React","useState","useEffect","FlatList","styled","Fonts","Colors","useHistory","useParams","textAPI","CryptoJS","Part4Item","ButtonText","Bold","BACKGROUND_COLOR","TestFlatList","Part4","history","testNumber","testList","setTestList","get","then","data","plainData","AES","decrypt","toString","enc","Utf8","json","JSON","parse","console","log","error","renderItem","index","item"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,WAAnB;AACA,OAAOC,KAAP,IAAoBC,QAApB,EAA8BC,SAA9B,QAA+C,OAA/C;AACA,SAASC,QAAT,QAAqC,cAArC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,kBAAtC;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AAEA,MAAMC,UAAU,GAAGR,MAAM,CAACC,KAAK,CAACQ,IAAP,CAAa;;sBAEhBP,MAAM,CAACQ,gBAAiB;;;CAF9C;AAOA,MAAMC,YAAY,GAAGX,MAAM,CAACD,QAAD,CAAyC;;;CAApE;;AAKA,MAAMa,KAAS,GAAG,MAAM;AACtB,QAAMC,OAAO,GAAGV,UAAU,EAA1B;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAiBV,SAAS,EAAhC;AAEA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAAQ,EAAR,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI;AACFO,MAAAA,OAAO,CAACY,GAAR,CAAYH,UAAZ,EAAwB,CAAxB,EAA2BI,IAA3B,CAAgCC,IAAI,IAAI;AACtC,cAAMC,SAAS,GAAGd,QAAQ,CAACe,GAAT,CAAaC,OAAb,CAAqBH,IAArB,EAA2B,UAA3B,EAAuCI,QAAvC,CAAgDjB,QAAQ,CAACkB,GAAT,CAAaC,IAA7D,CAAlB;AACA,cAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWR,SAAX,CAAb;AACAS,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACAV,QAAAA,WAAW,CAACU,IAAD,CAAX;AACD,OAND;AAOD,KARD,CAQE,OAAOK,KAAP,EAAc,CAAE;AACnB,GAVQ,EAUN,EAVM,CAAT;;AAYA,QAAMC,UAAU,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAA6C;AAC9D,UAAMC,IAAI,GAAGnB,QAAQ,CAACkB,KAAD,CAArB;AACA,wBACE,oBAAC,SAAD;AACE,MAAA,IAAI,EAAEC,IADR;AAEE,MAAA,UAAU,EAAED,KAFd;AAGE,MAAA,cAAc,EAAE,MAAM,IAHxB;AAIE,MAAA,UAAU,EAAE,MAAM,IAJpB;AAKE,MAAA,qBAAqB,EAAE,MAAM,IAL/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AASD,GAXD;;AAaA,sBACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,MAAf;AAAgB,IAAA,KAAK,EAAG,QAAOnB,UAAW,WAA1C;AAAsD,IAAA,QAAQ,MAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AACE,IAAA,IAAI,EAAEC,QADR;AAEE,IAAA,UAAU,EAAEiB,UAFd;AAGE,IAAA,YAAY,EAAE,CAACE,IAAD,EAAOD,KAAP,KAAkB,GAAEA,KAAM,IAAGC,IAAK,EAHlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADJ;AASD,CAxCD;;AA0CA,eAAetB,KAAf","sourcesContent":["import Screen from '../Screen';\nimport React, { FC, useState, useEffect } from 'react';\nimport { FlatList, Dimensions } from 'react-native';\nimport styled from 'styled-components/native';\nimport Fonts from '../../theme/fonts';\nimport Colors from '../../theme/colors';\nimport { useHistory, useParams } from 'react-router-dom';\nimport textAPI from \"../../api/textAPI\";\nimport CryptoJS from 'crypto-js';\nimport Part4Item from './shared/Part4Item';\n\nconst ButtonText = styled(Fonts.Bold)`\n  font-size: 18px;\n  background-color: ${Colors.BACKGROUND_COLOR};\n  margin: 10px;\n  padding: 10px;\n`;\n\nconst TestFlatList = styled(FlatList as new () => FlatList<string>)`\n  width: 100%;\n  height: 100%;\n`;\n\nconst Part4: FC = () => {\n  const history = useHistory();\n  const { testNumber } = useParams();\n\n  const [testList, setTestList] = useState<any[]>([]);\n\n  useEffect(() => {\n    try {\n      textAPI.get(testNumber, 4).then(data => {\n        const plainData = CryptoJS.AES.decrypt(data, 'thieumao').toString(CryptoJS.enc.Utf8);\n        const json = JSON.parse(plainData);\n        console.log('>>>> Part 4');\n        console.log(json);\n        setTestList(json);\n      });\n    } catch (error) {}\n  }, []);\n\n  const renderItem = ({ index }: { item: any; index: number }) => {\n    const item = testList[index];\n    return (\n      <Part4Item\n        data={item}\n        part4Index={index}\n        onSelectAnswer={() => null}\n        onCollapse={() => null}\n        onCollapseTranslation={() => null}\n      />\n    );\n  };\n\n  return (\n      <Screen canBack title={`Test ${testNumber} - Part 4`} showMenu>\n        <TestFlatList\n          data={testList}\n          renderItem={renderItem}\n          keyExtractor={(item, index) => `${index}_${item}`}\n        />\n      </Screen>\n  );\n};\n\nexport default Part4;\n"]},"metadata":{},"sourceType":"module"}