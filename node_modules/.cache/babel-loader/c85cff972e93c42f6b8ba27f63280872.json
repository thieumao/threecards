{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/thieunguyen/Desktop/Project/ReactJS/web-ets-2020/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject7(){var data=_taggedTemplateLiteral([\"\\n  padding-horizontal: 12px;\\n  padding-bottom: 8px;\\n\"]);_templateObject7=function _templateObject7(){return data;};return data;}function _templateObject6(){var data=_taggedTemplateLiteral([\"\\n  background-color: \",\";\\n  width: 100%;\\n  height: 2px;\\n  margin-top: 8px;\\n  margin-bottom: 8px;\\n\"]);_templateObject6=function _templateObject6(){return data;};return data;}function _templateObject5(){var data=_taggedTemplateLiteral([\"\\n  background-color: \",\";\\n  width: 100%;\\n  height: 1px;\\n\"]);_templateObject5=function _templateObject5(){return data;};return data;}function _templateObject4(){var data=_taggedTemplateLiteral([\"\\n  height: 100%;\\n  width: 100%;  \\n  padding-vertical: 8px;\\n\"]);_templateObject4=function _templateObject4(){return data;};return data;}function _templateObject3(){var data=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: 100%;\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n  font-size: 18px;\\n  padding: 8px;\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  background-color: \",\";\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{memo}from'react';import{Dimensions,FlatList}from'react-native';import styled from'styled-components/native';import Fonts from'../../../theme/fonts';import Colors from'../../../theme/colors';import QuestionItem from'./QuestionItem';import RawHTML from'../../../components/RawHTML';var ItemContainer=styled.View(_templateObject(),Colors.SECOND_COLOR);var Text=styled(Fonts.Bold)(_templateObject2());var TestFlatList=styled(FlatList)(_templateObject3());var ListContainer=styled.View(_templateObject4());var Space=styled.View(_templateObject5(),Colors.MAIN_COLOR);var Divider=styled.View(_templateObject6(),Colors.MAIN_COLOR);var HTMLContainer=styled.View(_templateObject7());var Part6Item=function Part6Item(_ref){var data=_ref.data,part6Index=_ref.part6Index,onSelectAnswer=_ref.onSelectAnswer,onCollapse=_ref.onCollapse,onCollapseTranslation=_ref.onCollapseTranslation;var selectAnswer=function selectAnswer(item,index,selected){onSelectAnswer(item,index,selected,part6Index);};var renderItem=function renderItem(_ref2){var index=_ref2.index;var item=data.questions[index];var screenWidth=Dimensions.get('window').width;return/*#__PURE__*/React.createElement(QuestionItem,{item:item,index:index,onClick:selectAnswer});};return/*#__PURE__*/React.createElement(ItemContainer,null,/*#__PURE__*/React.createElement(Text,null,\"\".concat(part6Index+1,\"/ \").concat(data.data.title||'')),!data.isCollapsed&&/*#__PURE__*/React.createElement(HTMLContainer,null,/*#__PURE__*/React.createElement(RawHTML,null,data.data.html)),data.isShownTranslate&&/*#__PURE__*/React.createElement(Space,null),data.isShownTranslate&&!data.isCollapsedTranslation&&/*#__PURE__*/React.createElement(HTMLContainer,null,/*#__PURE__*/React.createElement(RawHTML,null,data.translate.value)),/*#__PURE__*/React.createElement(Space,null),/*#__PURE__*/React.createElement(ListContainer,null,/*#__PURE__*/React.createElement(TestFlatList,{data:data.questions,renderItem:renderItem,keyExtractor:function keyExtractor(item,index){return\"\".concat(index,\"_\").concat(item.question);}})),3>part6Index&&/*#__PURE__*/React.createElement(Divider,null));};export default memo(Part6Item);","map":{"version":3,"sources":["/Users/thieunguyen/Desktop/Project/ReactJS/web-ets-2020/src/containers/Part6/shared/Part6Item.tsx"],"names":["React","memo","Dimensions","FlatList","styled","Fonts","Colors","QuestionItem","RawHTML","ItemContainer","View","SECOND_COLOR","Text","Bold","TestFlatList","ListContainer","Space","MAIN_COLOR","Divider","HTMLContainer","Part6Item","data","part6Index","onSelectAnswer","onCollapse","onCollapseTranslation","selectAnswer","item","index","selected","renderItem","questions","screenWidth","get","width","title","isCollapsed","html","isShownTranslate","isCollapsedTranslation","translate","value","question"],"mappings":"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","sourcesContent":["import React, { FC, memo } from 'react';\nimport { Dimensions, FlatList } from 'react-native';\nimport styled from 'styled-components/native';\nimport Fonts from '../../../theme/fonts';\nimport Colors from '../../../theme/colors';\nimport QuestionItem from './QuestionItem';\nimport RawHTML from '../../../components/RawHTML';\n\ninterface Props {\n  data: any;\n  part6Index: number;\n  onSelectAnswer: (detailItem: any, questionPosition: number, selected: string, part6Index: number) => void;\n  onCollapse: (part6Index: number) => void;\n  onCollapseTranslation: (part6Index: number) => void;\n}\n\ninterface StyledProps {\n  height?: number;\n  width?: number;\n  marginHorizontal?: number;\n  paddingHorizontal?: number;\n  paddingRight?: number;\n  isCorrect?: boolean;\n  isSelected?: boolean;\n  isShown?: boolean;\n}\n\ninterface ItemType {\n  id: number;\n  a: string;\n  b: string;\n  c: string;\n  d: string;\n  correct: string;\n  question: string;\n  selected?: string;\n  submitted?: boolean;\n}\n\nconst ItemContainer = styled.View<StyledProps>`\n  width: 100%;\n  background-color: ${Colors.SECOND_COLOR};\n`;\n\nconst Text = styled(Fonts.Bold)`\n  font-size: 18px;\n  padding: 8px;\n`;\n\nconst TestFlatList = styled(FlatList as new () => FlatList<ItemType>)`\n  width: 100%;\n  height: 100%;\n`;\n\nconst ListContainer = styled.View`\n  height: 100%;\n  width: 100%;  \n  padding-vertical: 8px;\n`;\n\nconst Space = styled.View<StyledProps>`\n  background-color: ${Colors.MAIN_COLOR};\n  width: 100%;\n  height: 1px;\n`;\n\nconst Divider = styled.View<StyledProps>`\n  background-color: ${Colors.MAIN_COLOR};\n  width: 100%;\n  height: 2px;\n  margin-top: 8px;\n  margin-bottom: 8px;\n`;\n\nconst HTMLContainer = styled.View`\n  padding-horizontal: 12px;\n  padding-bottom: 8px;\n`;\n\nconst Part6Item: FC<Props> = ({\n  data,\n  part6Index,\n  onSelectAnswer,\n  onCollapse,\n  onCollapseTranslation,\n}) => {\n  const selectAnswer = (item: any, index: number, selected: string) => {\n    onSelectAnswer(item, index, selected, part6Index);\n  };\n\n  const renderItem = ({ index }: { item: ItemType; index: number }) => {\n    const item = data.questions[index];\n    const screenWidth = Dimensions.get('window').width;\n    return (\n      <QuestionItem\n        item={item}\n        index={index}\n        onClick={selectAnswer}\n      />\n    );\n  };\n\n  return (\n    <ItemContainer>\n        <Text>{`${part6Index + 1}/ ${data.data.title || ''}`}</Text>\n        {!data.isCollapsed && (\n          <HTMLContainer>\n            <RawHTML>{data.data.html}</RawHTML>\n          </HTMLContainer>\n        )}\n        {data.isShownTranslate && <Space />}\n        {data.isShownTranslate && !data.isCollapsedTranslation && (\n          <HTMLContainer>\n            <RawHTML>{data.translate.value}</RawHTML>\n          </HTMLContainer>\n        )}\n        <Space />\n        <ListContainer>\n          <TestFlatList\n            data={data.questions}\n            renderItem={renderItem}\n            keyExtractor={(item, index) => `${index}_${item.question}`}\n          />\n        </ListContainer>\n        {3 > part6Index && <Divider />}\n    </ItemContainer>\n  );\n};\n\nexport default memo(Part6Item);\n"]},"metadata":{},"sourceType":"module"}