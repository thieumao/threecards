{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createOfflineMiddleware = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _constants = require('./constants');\n\nvar _actions = require('./actions');\n\nvar after = function after() {\n  var timeout = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, timeout);\n  });\n};\n\nvar complete = function complete(action, success, payload) {\n  return _extends({}, action, {\n    payload: payload,\n    meta: _extends({}, action.meta, {\n      success: success,\n      completed: true\n    })\n  });\n};\n\nvar take = function take(state, config) {\n  // batching is optional, for now\n  if (config.batch) {\n    return config.batch(state.offline.outbox);\n  }\n\n  return [state.offline.outbox[0]];\n};\n\nvar send = function send(action, dispatch, config) {\n  var retries = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  var metadata = action.meta.offline;\n  dispatch((0, _actions.busy)(true));\n  return config.effect(metadata.effect, action).then(function (result) {\n    return dispatch(complete(metadata.commit, true, result));\n  }).catch(function (error) {\n    // discard\n    if (config.discard(error, action, retries)) {\n      console.log('Discarding action', action.type);\n      return dispatch(complete(metadata.rollback, false, error));\n    }\n\n    var delay = config.retry(action, retries);\n\n    if (delay != null) {\n      console.log('Retrying action', action.type, 'with delay', delay);\n      return dispatch((0, _actions.scheduleRetry)(delay));\n    } else {\n      console.log('Discarding action', action.type, 'because retry did not return a delay');\n      return dispatch(complete(metadata.rollback, false, error));\n    }\n  });\n};\n\nvar createOfflineMiddleware = exports.createOfflineMiddleware = function createOfflineMiddleware(config) {\n  return function (store) {\n    return function (next) {\n      return function (action) {\n        // allow other middleware to do their things\n        var result = next(action); // find any actions to send, if any\n\n        var state = store.getState();\n        var actions = take(state, config); // if the are any actions in the queue that we are not\n        // yet processing, send those actions\n\n        if (actions.length > 0 && !state.offline.busy && !state.offline.retryScheduled && state.offline.online) {\n          send(actions[0], store.dispatch, config, state.offline.retryCount);\n        }\n\n        if (action.type === _constants.OFFLINE_SCHEDULE_RETRY) {\n          var retryToken = state.offline.retryToken;\n          after(action.payload.delay).then(function () {\n            return store.dispatch((0, _actions.completeRetry)(retryToken));\n          });\n        } // if (action.type === 'Offline/COMPLETE_RETRY') {\n        //   if (action.meta.retryToken === state.offline.retryToken && actions.length > 0) {\n        //     send(actions[0], store.dispatch, config);\n        //   }\n        // }\n\n\n        if (action.type === _constants.OFFLINE_SEND && actions.length > 0 && !state.offline.busy) {\n          send(actions[0], store.dispatch, config, state.offline.retryCount);\n        }\n\n        return result;\n      };\n    };\n  };\n};","map":{"version":3,"sources":["/Users/thieunguyen/Desktop/Project/ReactJS/web-ets-2020/node_modules/redux-offline/lib/middleware.js"],"names":["Object","defineProperty","exports","value","createOfflineMiddleware","undefined","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_constants","require","_actions","after","timeout","Promise","resolve","setTimeout","complete","action","success","payload","meta","completed","take","state","config","batch","offline","outbox","send","dispatch","retries","metadata","busy","effect","then","result","commit","catch","error","discard","console","log","type","rollback","delay","retry","scheduleRetry","store","next","getState","actions","retryScheduled","online","retryCount","OFFLINE_SCHEDULE_RETRY","retryToken","completeRetry","OFFLINE_SEND"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createOfflineMiddleware = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _constants = require('./constants');\n\nvar _actions = require('./actions');\n\nvar after = function after() {\n  var timeout = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, timeout);\n  });\n};\n\nvar complete = function complete(action, success, payload) {\n  return _extends({}, action, { payload: payload, meta: _extends({}, action.meta, { success: success, completed: true }) });\n};\n\nvar take = function take(state, config) {\n  // batching is optional, for now\n  if (config.batch) {\n    return config.batch(state.offline.outbox);\n  }\n\n  return [state.offline.outbox[0]];\n};\n\nvar send = function send(action, dispatch, config) {\n  var retries = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n  var metadata = action.meta.offline;\n  dispatch((0, _actions.busy)(true));\n  return config.effect(metadata.effect, action).then(function (result) {\n    return dispatch(complete(metadata.commit, true, result));\n  }).catch(function (error) {\n    // discard\n    if (config.discard(error, action, retries)) {\n      console.log('Discarding action', action.type);\n      return dispatch(complete(metadata.rollback, false, error));\n    }\n    var delay = config.retry(action, retries);\n    if (delay != null) {\n      console.log('Retrying action', action.type, 'with delay', delay);\n      return dispatch((0, _actions.scheduleRetry)(delay));\n    } else {\n      console.log('Discarding action', action.type, 'because retry did not return a delay');\n      return dispatch(complete(metadata.rollback, false, error));\n    }\n  });\n};\n\nvar createOfflineMiddleware = exports.createOfflineMiddleware = function createOfflineMiddleware(config) {\n  return function (store) {\n    return function (next) {\n      return function (action) {\n        // allow other middleware to do their things\n        var result = next(action);\n\n        // find any actions to send, if any\n        var state = store.getState();\n        var actions = take(state, config);\n\n        // if the are any actions in the queue that we are not\n        // yet processing, send those actions\n        if (actions.length > 0 && !state.offline.busy && !state.offline.retryScheduled && state.offline.online) {\n          send(actions[0], store.dispatch, config, state.offline.retryCount);\n        }\n\n        if (action.type === _constants.OFFLINE_SCHEDULE_RETRY) {\n          var retryToken = state.offline.retryToken;\n          after(action.payload.delay).then(function () {\n            return store.dispatch((0, _actions.completeRetry)(retryToken));\n          });\n        }\n\n        // if (action.type === 'Offline/COMPLETE_RETRY') {\n        //   if (action.meta.retryToken === state.offline.retryToken && actions.length > 0) {\n        //     send(actions[0], store.dispatch, config);\n        //   }\n        // }\n\n        if (action.type === _constants.OFFLINE_SEND && actions.length > 0 && !state.offline.busy) {\n          send(actions[0], store.dispatch, config, state.offline.retryCount);\n        }\n\n        return result;\n      };\n    };\n  };\n};"]},"metadata":{},"sourceType":"script"}