{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/thieunguyen/Desktop/Project/ReactJS/web-ets-2020/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject6(){var data=_taggedTemplateLiteral([\"\\n  width: \",\"px;\\n  height: \",\"px;\\n  resize-mode: contain;\\n  align-self: center;\\n\"]);_templateObject6=function _templateObject6(){return data;};return data;}function _templateObject5(){var data=_taggedTemplateLiteral([\"\\n  margin-horizontal: 8px;\\n  marign-top: 0px;\\n  margin-botton: 12px;\\n\"]);_templateObject5=function _templateObject5(){return data;};return data;}function _templateObject4(){var data=_taggedTemplateLiteral([\"\\n  font-size: 18px;\\n  color: \",\";\\n  background-color: \",\";\\n  padding: 8px;\\n\"]);_templateObject4=function _templateObject4(){return data;};return data;}function _templateObject3(){var data=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  background-color: \",\";\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n  padding-horizontal: 4px;\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  font-size: 18px;\\n  padding: 8px;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{memo}from'react';import{TouchableOpacity}from'react-native';import styled from'styled-components/native';import Fonts from'../../../theme/fonts';import Colors from'../../../theme/colors';import{Answer}from'../../../constants/AppConstants';import Divider from'../../../components/Divider';import RawHTML from'../../../components/RawHTML';import AudioPlayer from'components/AudioPlayer';import useWindowDimensions from'hooks/useWindowDimensions';var Text=styled(Fonts.Bold)(_templateObject());var ScrollView=styled.ScrollView(_templateObject2());var ItemContainer=styled.View(_templateObject3(),Colors.SECOND_COLOR);var ButtonText=styled(Fonts.Normal)(_templateObject4(),function(props){return props.isSelected?'green':'black';},function(props){return props.isShown?'yellow':Colors.SECOND_COLOR;});var HTMLContainer=styled.View(_templateObject5());var Image=styled.Image(_templateObject6(),function(props){return props.size;},function(props){return props.size;});var Part1Item=function Part1Item(_ref){var item=_ref.item,index=_ref.index,testNumber=_ref.testNumber,onClick=_ref.onClick;var audioPath=\"https://github.com/QuizSystem/ETS2020Audios/blob/master/Test\".concat(testNumber,\"/part1_\").concat(index+1,\".mov?raw=true\");var imagePath=\"https://raw.githubusercontent.com/QuizSystem/ETS2020Images/master/Test\".concat(testNumber,\"/part1_\").concat(index+1,\".png\");var _useWindowDimensions=useWindowDimensions(),width=_useWindowDimensions.width,height=_useWindowDimensions.height;var size=width>height?height:width;return/*#__PURE__*/React.createElement(ItemContainer,null,/*#__PURE__*/React.createElement(ScrollView,null,/*#__PURE__*/React.createElement(Text,null,\"\".concat(index+1,\"/\")),audioPath.length>0&&/*#__PURE__*/React.createElement(AudioPlayer,{audioPath:audioPath,play:index==0}),imagePath.length>0&&/*#__PURE__*/React.createElement(Image,{source:{uri:imagePath},size:size*72/100}),/*#__PURE__*/React.createElement(Divider,null),/*#__PURE__*/React.createElement(TouchableOpacity,{onPress:function onPress(){return onClick(item,index,Answer.A);}},/*#__PURE__*/React.createElement(ButtonText,{isSelected:Answer.A==item.selected,isShown:item.submitted&&Answer.A==item.correct},\"A. \".concat(item.submitted?item.a:''))),/*#__PURE__*/React.createElement(Divider,null),/*#__PURE__*/React.createElement(TouchableOpacity,{onPress:function onPress(){return onClick(item,index,Answer.B);}},/*#__PURE__*/React.createElement(ButtonText,{isSelected:Answer.B==item.selected,isShown:item.submitted&&Answer.B==item.correct},\"B. \".concat(item.submitted?item.b:''))),/*#__PURE__*/React.createElement(Divider,null),/*#__PURE__*/React.createElement(TouchableOpacity,{onPress:function onPress(){return onClick(item,index,Answer.C);}},/*#__PURE__*/React.createElement(ButtonText,{isSelected:Answer.C==item.selected,isShown:item.submitted&&Answer.C==item.correct},\"C. \".concat(item.submitted?item.c:''))),/*#__PURE__*/React.createElement(Divider,null),/*#__PURE__*/React.createElement(TouchableOpacity,{onPress:function onPress(){return onClick(item,index,Answer.D);}},/*#__PURE__*/React.createElement(ButtonText,{isSelected:Answer.D==item.selected,isShown:item.submitted&&Answer.D==item.correct},\"D. \".concat(item.submitted?item.d:''))),/*#__PURE__*/React.createElement(Divider,null),item.submitted&&item.html&&/*#__PURE__*/React.createElement(HTMLContainer,null,/*#__PURE__*/React.createElement(RawHTML,null,item.html))));};export default memo(Part1Item);","map":{"version":3,"sources":["/Users/thieunguyen/Desktop/Project/ReactJS/web-ets-2020/src/containers/Part1/shared/Part1Item.tsx"],"names":["React","memo","TouchableOpacity","styled","Fonts","Colors","Answer","Divider","RawHTML","AudioPlayer","useWindowDimensions","Text","Bold","ScrollView","ItemContainer","View","SECOND_COLOR","ButtonText","Normal","props","isSelected","isShown","HTMLContainer","Image","size","Part1Item","item","index","testNumber","onClick","audioPath","imagePath","width","height","length","uri","A","selected","submitted","correct","a","B","b","C","c","D","d","html"],"mappings":"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","sourcesContent":["import React, { FC, memo } from 'react';\nimport { TouchableOpacity } from 'react-native';\nimport styled from 'styled-components/native';\nimport Fonts from '../../../theme/fonts';\nimport Colors from '../../../theme/colors';\nimport { Answer } from '../../../constants/AppConstants';\nimport Divider from '../../../components/Divider';\nimport RawHTML from '../../../components/RawHTML';\nimport AudioPlayer from 'components/AudioPlayer';\nimport useWindowDimensions from 'hooks/useWindowDimensions';\n\ninterface Props {\n  item: any;\n  index: number;\n  testNumber: number;\n  onClick: (item: any, index: number, selected: string) => void;\n}\n\ninterface StyledProps {\n  size?: number;\n  width?: number;\n  height?: number;\n  marginHorizontal?: number;\n  paddingHorizontal?: number;\n  paddingRight?: number;\n  isCorrect?: boolean;\n  isSelected?: boolean;\n  isShown?: boolean;\n}\n\nconst Text = styled(Fonts.Bold)`\n  font-size: 18px;\n  padding: 8px;\n`;\n\nconst ScrollView = styled.ScrollView`\n  padding-horizontal: 4px;\n`;\n\nconst ItemContainer = styled.View<StyledProps>`\n  width: 100%;\n  background-color: ${Colors.SECOND_COLOR};\n`;\n\nconst ButtonText = styled(Fonts.Normal) <StyledProps>`\n  font-size: 18px;\n  color: ${props => props.isSelected ? 'green' : 'black'};\n  background-color: ${props => props.isShown ? 'yellow' : Colors.SECOND_COLOR};\n  padding: 8px;\n`;\n\nconst HTMLContainer = styled.View`\n  margin-horizontal: 8px;\n  marign-top: 0px;\n  margin-botton: 12px;\n`;\n\nconst Image = styled.Image<StyledProps>`\n  width: ${props => props.size}px;\n  height: ${props => props.size}px;\n  resize-mode: contain;\n  align-self: center;\n`;\n\nconst Part1Item: FC<Props> = ({ item, index, testNumber, onClick }) => {\n  const audioPath = `https://github.com/QuizSystem/ETS2020Audios/blob/master/Test${testNumber}/part1_${index + 1}.mov?raw=true`;\n\n  const imagePath = `https://raw.githubusercontent.com/QuizSystem/ETS2020Images/master/Test${testNumber}/part1_${index + 1}.png`;\n  const { width, height } = useWindowDimensions();\n  const size = width > height ? height : width;\n  return (\n    <ItemContainer>\n      <ScrollView>\n        <Text >{`${index + 1}/`}</Text>\n        {audioPath.length > 0 && <AudioPlayer audioPath={audioPath} play={index == 0} />}\n        {imagePath.length > 0 && <Image source={{ uri: imagePath }} size={size * 72 / 100} />}\n        <Divider />\n        <TouchableOpacity onPress={() => onClick(item, index, Answer.A)}>\n          <ButtonText isSelected={Answer.A == item.selected} isShown={item.submitted && Answer.A == item.correct}>{`A. ${item.submitted ? item.a : ''}`}</ButtonText>\n        </TouchableOpacity>\n        <Divider />\n        <TouchableOpacity onPress={() => onClick(item, index, Answer.B)}>\n          <ButtonText isSelected={Answer.B == item.selected} isShown={item.submitted && Answer.B == item.correct}>{`B. ${item.submitted ? item.b : ''}`}</ButtonText>\n        </TouchableOpacity>\n        <Divider />\n        <TouchableOpacity onPress={() => onClick(item, index, Answer.C)}>\n          <ButtonText isSelected={Answer.C == item.selected} isShown={item.submitted && Answer.C == item.correct}>{`C. ${item.submitted ? item.c : ''}`}</ButtonText>\n        </TouchableOpacity>\n        <Divider />\n        <TouchableOpacity onPress={() => onClick(item, index, Answer.D)}>\n          <ButtonText isSelected={Answer.D == item.selected} isShown={item.submitted && Answer.D == item.correct}>{`D. ${item.submitted ? item.d : ''}`}</ButtonText>\n        </TouchableOpacity>\n        <Divider />\n        {item.submitted && item.html && (\n          <HTMLContainer>\n            <RawHTML>{item.html}</RawHTML>\n          </HTMLContainer>\n        )}\n      </ScrollView>\n    </ItemContainer>\n  );\n};\n\nexport default memo(Part1Item);\n"]},"metadata":{},"sourceType":"module"}