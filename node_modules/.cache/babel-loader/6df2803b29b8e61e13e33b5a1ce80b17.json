{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.offline = undefined;\n\nvar _redux = require('redux');\n\nvar _reduxPersist = require('redux-persist');\n\nvar _middleware = require('./middleware');\n\nvar _updater = require('./updater');\n\nvar _config = require('./config');\n\nvar _actions = require('./actions'); // @TODO: Take createStore as config?\n// eslint-disable-next-line no-unused-vars\n\n\nvar persistor = void 0;\n/*global $Shape*/\n\nvar offline = exports.offline = function offline() {\n  var userConfig = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return function (createStore) {\n    return function (reducer, preloadedState) {\n      var enhancer = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function (x) {\n        return x;\n      };\n      console.log('user config', userConfig);\n      var config = (0, _config.applyDefaults)(userConfig);\n      console.log('Creating offline store', config); // wraps userland reducer with a top-level\n      // reducer that handles offline state updating\n\n      var offlineReducer = (0, _updater.enhanceReducer)(reducer);\n      var offlineMiddleware = (0, _redux.applyMiddleware)((0, _middleware.createOfflineMiddleware)(config)); // create autoRehydrate enhancer if required\n\n      var offlineEnhancer = config.persist && config.rehydrate ? (0, _redux.compose)(offlineMiddleware, enhancer, (0, _reduxPersist.autoRehydrate)()) : (0, _redux.compose)(offlineMiddleware, enhancer); // create store\n\n      var store = createStore(offlineReducer, preloadedState, offlineEnhancer); // launch store persistor\n\n      if (config.persist) {\n        persistor = config.persist(store, config.persistOptions, config.persistCallback);\n      } // launch network detector\n\n\n      if (config.detectNetwork) {\n        config.detectNetwork(function (online) {\n          store.dispatch((0, _actions.networkStatusChanged)(online));\n        });\n      }\n\n      return store;\n    };\n  };\n};","map":{"version":3,"sources":["/Users/thieunguyen/Desktop/Project/ReactJS/threecards/node_modules/redux-offline/lib/index.js"],"names":["Object","defineProperty","exports","value","offline","undefined","_redux","require","_reduxPersist","_middleware","_updater","_config","_actions","persistor","userConfig","arguments","length","createStore","reducer","preloadedState","enhancer","x","console","log","config","applyDefaults","offlineReducer","enhanceReducer","offlineMiddleware","applyMiddleware","createOfflineMiddleware","offlineEnhancer","persist","rehydrate","compose","autoRehydrate","store","persistOptions","persistCallback","detectNetwork","online","dispatch","networkStatusChanged"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,SAAlB;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,OAAD,CAApB;;AAEA,IAAIC,aAAa,GAAGD,OAAO,CAAC,eAAD,CAA3B;;AAEA,IAAIE,WAAW,GAAGF,OAAO,CAAC,cAAD,CAAzB;;AAEA,IAAIG,QAAQ,GAAGH,OAAO,CAAC,WAAD,CAAtB;;AAEA,IAAII,OAAO,GAAGJ,OAAO,CAAC,UAAD,CAArB;;AAEA,IAAIK,QAAQ,GAAGL,OAAO,CAAC,WAAD,CAAtB,C,CAEA;AAEA;;;AACA,IAAIM,SAAS,GAAG,KAAK,CAArB;AACA;;AACA,IAAIT,OAAO,GAAGF,OAAO,CAACE,OAAR,GAAkB,SAASA,OAAT,GAAmB;AACjD,MAAIU,UAAU,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBV,SAAzC,GAAqDU,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAArF;AACA,SAAO,UAAUE,WAAV,EAAuB;AAC5B,WAAO,UAAUC,OAAV,EAAmBC,cAAnB,EAAmC;AACxC,UAAIC,QAAQ,GAAGL,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBV,SAAzC,GAAqDU,SAAS,CAAC,CAAD,CAA9D,GAAoE,UAAUM,CAAV,EAAa;AAC9F,eAAOA,CAAP;AACD,OAFD;AAIAC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BT,UAA3B;AACA,UAAIU,MAAM,GAAG,CAAC,GAAGb,OAAO,CAACc,aAAZ,EAA2BX,UAA3B,CAAb;AAEAQ,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCC,MAAtC,EARwC,CAUxC;AACA;;AACA,UAAIE,cAAc,GAAG,CAAC,GAAGhB,QAAQ,CAACiB,cAAb,EAA6BT,OAA7B,CAArB;AAEA,UAAIU,iBAAiB,GAAG,CAAC,GAAGtB,MAAM,CAACuB,eAAX,EAA4B,CAAC,GAAGpB,WAAW,CAACqB,uBAAhB,EAAyCN,MAAzC,CAA5B,CAAxB,CAdwC,CAgBxC;;AACA,UAAIO,eAAe,GAAGP,MAAM,CAACQ,OAAP,IAAkBR,MAAM,CAACS,SAAzB,GAAqC,CAAC,GAAG3B,MAAM,CAAC4B,OAAX,EAAoBN,iBAApB,EAAuCR,QAAvC,EAAiD,CAAC,GAAGZ,aAAa,CAAC2B,aAAlB,GAAjD,CAArC,GAA4H,CAAC,GAAG7B,MAAM,CAAC4B,OAAX,EAAoBN,iBAApB,EAAuCR,QAAvC,CAAlJ,CAjBwC,CAmBxC;;AACA,UAAIgB,KAAK,GAAGnB,WAAW,CAACS,cAAD,EAAiBP,cAAjB,EAAiCY,eAAjC,CAAvB,CApBwC,CAsBxC;;AACA,UAAIP,MAAM,CAACQ,OAAX,EAAoB;AAClBnB,QAAAA,SAAS,GAAGW,MAAM,CAACQ,OAAP,CAAeI,KAAf,EAAsBZ,MAAM,CAACa,cAA7B,EAA6Cb,MAAM,CAACc,eAApD,CAAZ;AACD,OAzBuC,CA2BxC;;;AACA,UAAId,MAAM,CAACe,aAAX,EAA0B;AACxBf,QAAAA,MAAM,CAACe,aAAP,CAAqB,UAAUC,MAAV,EAAkB;AACrCJ,UAAAA,KAAK,CAACK,QAAN,CAAe,CAAC,GAAG7B,QAAQ,CAAC8B,oBAAb,EAAmCF,MAAnC,CAAf;AACD,SAFD;AAGD;;AAED,aAAOJ,KAAP;AACD,KAnCD;AAoCD,GArCD;AAsCD,CAxCD","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.offline = undefined;\n\nvar _redux = require('redux');\n\nvar _reduxPersist = require('redux-persist');\n\nvar _middleware = require('./middleware');\n\nvar _updater = require('./updater');\n\nvar _config = require('./config');\n\nvar _actions = require('./actions');\n\n// @TODO: Take createStore as config?\n\n// eslint-disable-next-line no-unused-vars\nvar persistor = void 0;\n/*global $Shape*/\nvar offline = exports.offline = function offline() {\n  var userConfig = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return function (createStore) {\n    return function (reducer, preloadedState) {\n      var enhancer = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function (x) {\n        return x;\n      };\n\n      console.log('user config', userConfig);\n      var config = (0, _config.applyDefaults)(userConfig);\n\n      console.log('Creating offline store', config);\n\n      // wraps userland reducer with a top-level\n      // reducer that handles offline state updating\n      var offlineReducer = (0, _updater.enhanceReducer)(reducer);\n\n      var offlineMiddleware = (0, _redux.applyMiddleware)((0, _middleware.createOfflineMiddleware)(config));\n\n      // create autoRehydrate enhancer if required\n      var offlineEnhancer = config.persist && config.rehydrate ? (0, _redux.compose)(offlineMiddleware, enhancer, (0, _reduxPersist.autoRehydrate)()) : (0, _redux.compose)(offlineMiddleware, enhancer);\n\n      // create store\n      var store = createStore(offlineReducer, preloadedState, offlineEnhancer);\n\n      // launch store persistor\n      if (config.persist) {\n        persistor = config.persist(store, config.persistOptions, config.persistCallback);\n      }\n\n      // launch network detector\n      if (config.detectNetwork) {\n        config.detectNetwork(function (online) {\n          store.dispatch((0, _actions.networkStatusChanged)(online));\n        });\n      }\n\n      return store;\n    };\n  };\n};"]},"metadata":{},"sourceType":"script"}