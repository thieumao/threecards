{"ast":null,"code":"var _jsxFileName = \"/Users/thieunguyen/Desktop/Project/ReactJS/threecards/src/containers/Part3/shared/Part3Item.tsx\";\nimport React, { memo } from 'react';\nimport { FlatList } from 'react-native';\nimport styled from 'styled-components/native';\nimport Fonts from '../../../theme/fonts';\nimport Colors from '../../../theme/colors';\nimport QuestionItem from './QuestionItem';\nimport RawHTML from '../../../components/RawHTML';\nimport AudioPlayer from 'components/AudioPlayer';\nimport useWindowDimensions from 'hooks/useWindowDimensions';\nconst ItemContainer = styled.View`\n  width: 100%;\n  background-color: ${Colors.SECOND_COLOR};\n`;\nconst Text = styled(Fonts.Bold)`\n  font-size: 18px;\n  padding: 8px;\n`;\nconst TestFlatList = styled(FlatList)`\n  width: 100%;\n  height: 100%;\n`;\nconst ListContainer = styled.View`\n  height: 100%;\n  width: 100%;  \n  padding-vertical: 8px;\n`;\nconst Space = styled.View`\n  background-color: ${Colors.MAIN_COLOR};\n  width: 100%;\n  height: 1px;\n`;\nconst Divider = styled.View`\n  background-color: ${Colors.MAIN_COLOR};\n  width: 100%;\n  height: 2px;\n  margin-top: 8px;\n  margin-bottom: 8px;\n`;\nconst HTMLContainer = styled.View`\n  padding-horizontal: 12px;\n  padding-bottom: 8px;\n`;\nconst Image = styled.Image`\n  width: ${props => props.size}px;\n  height: ${props => props.size}px;\n  resize-mode: contain;\n  align-self: center;\n`;\n\nconst Part3Item = ({\n  data,\n  part3Index,\n  testNumber,\n  onSelectAnswer,\n  onCollapse,\n  onCollapseTranslation\n}) => {\n  const audioPath = `https://github.com/QuizSystem/ETS2020Audios/blob/master/Test${testNumber}/part3_${part3Index + 1}.mov?raw=true`;\n  const imagePath = `https://raw.githubusercontent.com/QuizSystem/ETS2020Images/master/Test${testNumber}/part3_${part3Index + 1}.png`;\n  const {\n    width,\n    height\n  } = useWindowDimensions();\n  const size = width > height ? height : width;\n\n  const selectAnswer = (item, index, selected) => {\n    onSelectAnswer(item, index, selected, part3Index);\n  };\n\n  const renderItem = ({\n    index\n  }) => {\n    const item = data.questions[index];\n    return /*#__PURE__*/React.createElement(QuestionItem, {\n      item: item,\n      index: index,\n      onClick: selectAnswer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(ItemContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, `${part3Index + 1}/ ${data.data.title || ''}`), audioPath.length > 0 && /*#__PURE__*/React.createElement(AudioPlayer, {\n    audioPath: audioPath,\n    play: part3Index == 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 34\n    }\n  }), imagePath.length > 0 && part3Index >= 10 && /*#__PURE__*/React.createElement(Image, {\n    source: {\n      uri: imagePath\n    },\n    size: size * 72 / 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 54\n    }\n  }), data.submitted && !data.isCollapsed && /*#__PURE__*/React.createElement(HTMLContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(RawHTML, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, data.data.html)), data.submitted && data.isShownTranslate && /*#__PURE__*/React.createElement(Space, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 53\n    }\n  }), data.submitted && data.isShownTranslate && !data.isCollapsedTranslation && /*#__PURE__*/React.createElement(HTMLContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(RawHTML, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, data.translate.value)), data.submitted && /*#__PURE__*/React.createElement(Space, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 28\n    }\n  }), /*#__PURE__*/React.createElement(ListContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TestFlatList, {\n    data: data.questions,\n    renderItem: renderItem,\n    keyExtractor: (item, index) => `${index}_${item.question}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  })), 12 > part3Index && /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 29\n    }\n  }));\n};\n\nexport default memo(Part3Item);","map":{"version":3,"sources":["/Users/thieunguyen/Desktop/Project/ReactJS/threecards/src/containers/Part3/shared/Part3Item.tsx"],"names":["React","memo","FlatList","styled","Fonts","Colors","QuestionItem","RawHTML","AudioPlayer","useWindowDimensions","ItemContainer","View","SECOND_COLOR","Text","Bold","TestFlatList","ListContainer","Space","MAIN_COLOR","Divider","HTMLContainer","Image","props","size","Part3Item","data","part3Index","testNumber","onSelectAnswer","onCollapse","onCollapseTranslation","audioPath","imagePath","width","height","selectAnswer","item","index","selected","renderItem","questions","title","length","uri","submitted","isCollapsed","html","isShownTranslate","isCollapsedTranslation","translate","value","question"],"mappings":"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","sourcesContent":["import React, { FC, memo } from 'react';\nimport { FlatList } from 'react-native';\nimport styled from 'styled-components/native';\nimport Fonts from '../../../theme/fonts';\nimport Colors from '../../../theme/colors';\nimport QuestionItem from './QuestionItem';\nimport RawHTML from '../../../components/RawHTML';\nimport AudioPlayer from 'components/AudioPlayer';\nimport useWindowDimensions from 'hooks/useWindowDimensions';\n\ninterface Props {\n  data: any;\n  part3Index: number;\n  testNumber: number;\n  onSelectAnswer: (detailItem: any, questionPosition: number, selected: string, part3Index: number) => void;\n  onCollapse: (part3Index: number) => void;\n  onCollapseTranslation: (part3Index: number) => void;\n}\n\ninterface StyledProps {\n  size?: number;\n  height?: number;\n  width?: number;\n  marginHorizontal?: number;\n  paddingHorizontal?: number;\n  paddingRight?: number;\n  isCorrect?: boolean;\n  isSelected?: boolean;\n  isShown?: boolean;\n}\n\ninterface ItemType {\n  id: number;\n  a: string;\n  b: string;\n  c: string;\n  d: string;\n  correct: string;\n  question: string;\n  selected?: string;\n  submitted?: boolean;\n}\n\nconst ItemContainer = styled.View<StyledProps>`\n  width: 100%;\n  background-color: ${Colors.SECOND_COLOR};\n`;\n\nconst Text = styled(Fonts.Bold)`\n  font-size: 18px;\n  padding: 8px;\n`;\n\nconst TestFlatList = styled(FlatList as new () => FlatList<ItemType>)`\n  width: 100%;\n  height: 100%;\n`;\n\nconst ListContainer = styled.View`\n  height: 100%;\n  width: 100%;  \n  padding-vertical: 8px;\n`;\n\nconst Space = styled.View<StyledProps>`\n  background-color: ${Colors.MAIN_COLOR};\n  width: 100%;\n  height: 1px;\n`;\n\nconst Divider = styled.View<StyledProps>`\n  background-color: ${Colors.MAIN_COLOR};\n  width: 100%;\n  height: 2px;\n  margin-top: 8px;\n  margin-bottom: 8px;\n`;\n\nconst HTMLContainer = styled.View`\n  padding-horizontal: 12px;\n  padding-bottom: 8px;\n`;\n\nconst Image = styled.Image<StyledProps>`\n  width: ${props => props.size}px;\n  height: ${props => props.size}px;\n  resize-mode: contain;\n  align-self: center;\n`;\n\nconst Part3Item: FC<Props> = ({\n  data,\n  part3Index,\n  testNumber,\n  onSelectAnswer,\n  onCollapse,\n  onCollapseTranslation,\n}) => {\n  const audioPath = `https://github.com/QuizSystem/ETS2020Audios/blob/master/Test${testNumber}/part3_${part3Index + 1}.mov?raw=true`;\n\n  const imagePath = `https://raw.githubusercontent.com/QuizSystem/ETS2020Images/master/Test${testNumber}/part3_${part3Index + 1}.png`;\n  const { width, height } = useWindowDimensions();\n  const size = width > height ? height : width;\n\n  const selectAnswer = (item: any, index: number, selected: string) => {\n    onSelectAnswer(item, index, selected, part3Index);\n  };\n\n  const renderItem = ({ index }: { item: ItemType; index: number }) => {\n    const item = data.questions[index];\n    return (\n      <QuestionItem\n        item={item}\n        index={index}\n        onClick={selectAnswer}\n      />\n    );\n  };\n\n  return (\n    <ItemContainer>\n        <Text>{`${part3Index + 1}/ ${data.data.title || ''}`}</Text>\n        {audioPath.length > 0 && <AudioPlayer audioPath={audioPath} play={part3Index == 0} />}\n        {imagePath.length > 0 && part3Index >= 10 && <Image source={{ uri: imagePath }} size={size * 72 / 100} />}\n        {data.submitted && !data.isCollapsed && (\n          <HTMLContainer>\n            <RawHTML>{data.data.html}</RawHTML>\n          </HTMLContainer>\n        )}\n        {data.submitted && data.isShownTranslate && <Space />}\n        {data.submitted && data.isShownTranslate && !data.isCollapsedTranslation && (\n          <HTMLContainer>\n            <RawHTML>{data.translate.value}</RawHTML>\n          </HTMLContainer>\n        )}\n        {data.submitted && <Space />}\n        <ListContainer>\n          <TestFlatList\n            data={data.questions}\n            renderItem={renderItem}\n            keyExtractor={(item, index) => `${index}_${item.question}`}\n          />\n        </ListContainer>\n        {12 > part3Index && <Divider />}\n    </ItemContainer>\n  );\n};\n\nexport default memo(Part3Item);\n"]},"metadata":{},"sourceType":"module"}