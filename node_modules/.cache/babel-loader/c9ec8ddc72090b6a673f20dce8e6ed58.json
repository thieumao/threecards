{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/thieunguyen/Desktop/Project/ReactJS/web-ets-2020/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  border-bottom-color: \",\";\\n  border-bottom-width: \",\"px;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{memo}from'react';import styled from'styled-components/native';import Colors from'../../theme/colors';var Container=styled.View(_templateObject(),function(props){return props.color;},function(props){return props.height;});var Divider=function Divider(_ref){var color=_ref.color,height=_ref.height;return/*#__PURE__*/React.createElement(Container,{color:color,height:height});};Divider.defaultProps={color:Colors.DIVIDER,height:1};export default memo(Divider);","map":{"version":3,"sources":["/Users/thieunguyen/Desktop/Project/ReactJS/web-ets-2020/src/components/Divider/index.tsx"],"names":["React","memo","styled","Colors","Container","View","props","color","height","Divider","defaultProps","DIVIDER"],"mappings":"mYAAA,MAAOA,CAAAA,KAAP,EAAoBC,IAApB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,oBAAnB,CAOA,GAAMC,CAAAA,SAAS,CAAGF,MAAM,CAACG,IAAV,mBACU,SAAAC,KAAK,QAAIA,CAAAA,KAAK,CAACC,KAAV,EADf,CAEU,SAAAD,KAAK,QAAIA,CAAAA,KAAK,CAACE,MAAV,EAFf,CAAf,CAKA,GAAMC,CAAAA,OAAkB,CAAG,QAArBA,CAAAA,OAAqB,MAAuB,IAApBF,CAAAA,KAAoB,MAApBA,KAAoB,CAAbC,MAAa,MAAbA,MAAa,CAChD,mBAAO,oBAAC,SAAD,EAAW,KAAK,CAAED,KAAlB,CAAyB,MAAM,CAAEC,MAAjC,EAAP,CACD,CAFD,CAIAC,OAAO,CAACC,YAAR,CAAuB,CACrBH,KAAK,CAAEJ,MAAM,CAACQ,OADO,CAErBH,MAAM,CAAE,CAFa,CAAvB,CAKA,cAAeP,CAAAA,IAAI,CAACQ,OAAD,CAAnB","sourcesContent":["import React, { FC, memo } from 'react';\nimport styled from 'styled-components/native';\nimport Colors from '../../theme/colors';\n\ninterface Props {\n  color?: string;\n  height?: number;\n}\n\nconst Container = styled.View<Props>`\n  border-bottom-color: ${props => props.color};\n  border-bottom-width: ${props => props.height}px;\n`;\n\nconst Divider: FC<Props> = ({ color, height }) => {\n  return <Container color={color} height={height} />;\n};\n\nDivider.defaultProps = {\n  color: Colors.DIVIDER,\n  height: 1,\n};\n\nexport default memo(Divider);\n"]},"metadata":{},"sourceType":"module"}