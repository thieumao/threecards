{"ast":null,"code":"var _jsxFileName = \"/Users/thieunguyen/Desktop/Project/ReactJS/web-ets-2020/src/containers/PartList/index.tsx\";\nimport Screen from '../Screen';\nimport React, { useState } from 'react';\nimport { FlatList } from 'react-native';\nimport styled from 'styled-components/native';\nimport Fonts from '../../theme/fonts';\nimport Colors from '../../theme/colors';\nimport { useParams, useHistory } from 'react-router-dom';\nconst TestFlatList = styled(FlatList)`\n  width: 100%;\n  height: 100%;\n`;\nconst ButtonText = styled(Fonts.Bold)`\n  font-size: 18px;\n  background-color: ${Colors.BACKGROUND_COLOR};\n  margin: 10px;\n  padding: 10px;\n`;\n\nconst PartList = () => {\n  const {\n    testNumber\n  } = useParams();\n  const history = useHistory();\n  const [testList] = useState(['Part 1', 'Part 2', 'Part 3', 'Part 4', 'Part 5', 'Part 6', 'Part 7']);\n\n  const openPartScreen = index => {\n    const partNumber = index + 1;\n    history.push(`/ets2020/test${testNumber}/part${partNumber}`);\n  };\n\n  const renderItem = ({\n    index\n  }) => {\n    return /*#__PURE__*/React.createElement(ButtonText, {\n      onPress: () => openPartScreen(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, `${testList[index]}`);\n  };\n\n  return /*#__PURE__*/React.createElement(Screen, {\n    canBack: true,\n    title: `Test ${testNumber}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TestFlatList, {\n    data: testList,\n    renderItem: renderItem,\n    keyExtractor: (item, index) => `${index}_${item}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default PartList;","map":{"version":3,"sources":["/Users/thieunguyen/Desktop/Project/ReactJS/web-ets-2020/src/containers/PartList/index.tsx"],"names":["Screen","React","useState","FlatList","styled","Fonts","Colors","useParams","useHistory","TestFlatList","ButtonText","Bold","BACKGROUND_COLOR","PartList","testNumber","history","testList","openPartScreen","index","partNumber","push","renderItem","item"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,WAAnB;AACA,OAAOC,KAAP,IAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,kBAAtC;AAEA,MAAMC,YAAY,GAAGL,MAAM,CAACD,QAAD,CAAyC;;;CAApE;AAKA,MAAMO,UAAU,GAAGN,MAAM,CAACC,KAAK,CAACM,IAAP,CAAa;;sBAEhBL,MAAM,CAACM,gBAAiB;;;CAF9C;;AAOA,MAAMC,QAAY,GAAG,MAAM;AACzB,QAAM;AAAEC,IAAAA;AAAF,MAAiBP,SAAS,EAAhC;AACA,QAAMQ,OAAO,GAAGP,UAAU,EAA1B;AAEA,QAAM,CAACQ,QAAD,IAAad,QAAQ,CAAW,CAAC,QAAD,EAAW,QAAX,EAAqB,QAArB,EAA+B,QAA/B,EAAyC,QAAzC,EAAmD,QAAnD,EAA6D,QAA7D,CAAX,CAA3B;;AAEA,QAAMe,cAAc,GAAIC,KAAD,IAAmB;AACxC,UAAMC,UAAU,GAAGD,KAAK,GAAG,CAA3B;AACAH,IAAAA,OAAO,CAACK,IAAR,CAAc,gBAAeN,UAAW,QAAOK,UAAW,EAA1D;AACD,GAHD;;AAKA,QAAME,UAAU,GAAG,CAAC;AAAEH,IAAAA;AAAF,GAAD,KAAgD;AACjE,wBACE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAE,MAAMD,cAAc,CAACC,KAAD,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoD,GAAEF,QAAQ,CAACE,KAAD,CAAQ,EAAtE,CADF;AAGD,GAJD;;AAMA,sBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,MAAf;AAAgB,IAAA,KAAK,EAAG,QAAOJ,UAAW,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AACE,IAAA,IAAI,EAAEE,QADR;AAEE,IAAA,UAAU,EAAEK,UAFd;AAGE,IAAA,YAAY,EAAE,CAACC,IAAD,EAAOJ,KAAP,KAAkB,GAAEA,KAAM,IAAGI,IAAK,EAHlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AASD,CA1BD;;AA4BA,eAAeT,QAAf","sourcesContent":["import Screen from '../Screen';\nimport React, { FC, useState } from 'react';\nimport { FlatList } from 'react-native';\nimport styled from 'styled-components/native';\nimport Fonts from '../../theme/fonts';\nimport Colors from '../../theme/colors';\nimport { useParams, useHistory } from 'react-router-dom';\n\nconst TestFlatList = styled(FlatList as new () => FlatList<string>)`\n  width: 100%;\n  height: 100%;\n`;\n\nconst ButtonText = styled(Fonts.Bold)`\n  font-size: 18px;\n  background-color: ${Colors.BACKGROUND_COLOR};\n  margin: 10px;\n  padding: 10px;\n`;\n\nconst PartList: FC = () => {\n  const { testNumber } = useParams();\n  const history = useHistory();\n\n  const [testList] = useState<string[]>(['Part 1', 'Part 2', 'Part 3', 'Part 4', 'Part 5', 'Part 6', 'Part 7']);\n\n  const openPartScreen = (index: number) => {\n    const partNumber = index + 1;\n    history.push(`/ets2020/test${testNumber}/part${partNumber}`);\n  };\n\n  const renderItem = ({ index }: { item: string; index: number }) => {\n    return (\n      <ButtonText onPress={() => openPartScreen(index)}>{`${testList[index]}`}</ButtonText>\n    );\n  };\n\n  return (\n    <Screen canBack title={`Test ${testNumber}`}>\n      <TestFlatList\n        data={testList}\n        renderItem={renderItem}\n        keyExtractor={(item, index) => `${index}_${item}`}\n      />\n    </Screen>\n  );\n};\n\nexport default PartList;\n"]},"metadata":{},"sourceType":"module"}