{"ast":null,"code":"var _jsxFileName = \"/Users/thieunguyen/Desktop/Project/ReactJS/web-ets-2020/src/containers/Part5/index.tsx\";\nimport Screen from '../Screen';\nimport React, { useState, useEffect } from 'react';\nimport { FlatList } from 'react-native';\nimport styled from 'styled-components/native';\nimport Fonts from 'theme/fonts';\nimport Colors from 'theme/colors';\nimport { useHistory, useParams } from 'react-router-dom';\nimport textAPI from \"api/textAPI\";\nimport CryptoJS from 'crypto-js';\nimport Part5Item from './shared/Part5Item';\nimport Footer from 'components/Footer';\nimport { getNumber } from 'store/selectors/projectSelectors';\nimport { testAction, increaseAction, updatePartAction } from 'store/actionTypes/actionType';\nimport { useDispatch, useSelector } from 'react-redux';\nconst ButtonText = styled(Fonts.Bold)`\n  font-size: 18px;\n  background-color: ${Colors.BACKGROUND_COLOR};\n  margin: 10px;\n  padding: 10px;\n`;\nconst TestFlatList = styled(FlatList)`\n  width: 100%;\n  height: 100%;\n`;\n\nconst Part5 = () => {\n  const [testList, setTestList] = useState([]);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const {\n    testNumber\n  } = useParams();\n  const testName = `test${testNumber}`;\n  useEffect(() => {\n    const part5 = {};\n    getData(testNumber, part5);\n  }, []);\n  const valueNumber = useSelector(getNumber);\n  useEffect(() => {\n    console.log(\"Introduction\");\n    dispatch(testAction('name', 'Thieu Mao'));\n    dispatch(increaseAction('number', valueNumber));\n  }, []);\n\n  const getData = async (testNumber, part5) => {\n    try {\n      textAPI.get(testNumber, 5).then(data => {\n        const plainData = CryptoJS.AES.decrypt(data, 'thieumao').toString(CryptoJS.enc.Utf8);\n        const json = JSON.parse(plainData);\n        console.log('>>>>>>> Part 5');\n        console.log(json);\n        setTestList(json);\n      });\n    } catch (error) {}\n  };\n\n  const updateDatabase = async (testName, part5Questions) => {\n    const part5Detail = {\n      name: 'Part 5',\n      questions: part5Questions\n    };\n    dispatch(updatePartAction(testName, 'part5', part5Detail));\n  };\n\n  const selectAnswer = (item, index, selected) => {\n    console.log('>>>>>> selectAnswer');\n    console.log(item);\n    console.log(index);\n    console.log(selected);\n  };\n\n  const renderItem = ({\n    index\n  }) => {\n    const item = testList[index];\n    return /*#__PURE__*/React.createElement(Part5Item, {\n      item: item,\n      index: index,\n      visibleIndex: 1,\n      onClick: selectAnswer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Screen, {\n    canBack: true,\n    title: `Test ${testNumber} - Part 5`,\n    showMenu: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TestFlatList, {\n    data: testList,\n    renderItem: renderItem,\n    keyExtractor: (item, index) => `${index}_${item}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Footer, {\n    correctNumber: 1,\n    totalNumber: 20,\n    onReset: () => null,\n    onSubmit: () => null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default Part5;","map":{"version":3,"sources":["/Users/thieunguyen/Desktop/Project/ReactJS/web-ets-2020/src/containers/Part5/index.tsx"],"names":["Screen","React","useState","useEffect","FlatList","styled","Fonts","Colors","useHistory","useParams","textAPI","CryptoJS","Part5Item","Footer","getNumber","testAction","increaseAction","updatePartAction","useDispatch","useSelector","ButtonText","Bold","BACKGROUND_COLOR","TestFlatList","Part5","testList","setTestList","dispatch","history","testNumber","testName","part5","getData","valueNumber","console","log","get","then","data","plainData","AES","decrypt","toString","enc","Utf8","json","JSON","parse","error","updateDatabase","part5Questions","part5Detail","name","questions","selectAnswer","item","index","selected","renderItem"],"mappings":"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","sourcesContent":["import Screen from '../Screen';\nimport React, { FC, useState, useEffect } from 'react';\nimport { FlatList, Dimensions } from 'react-native';\nimport styled from 'styled-components/native';\nimport Fonts from 'theme/fonts';\nimport Colors from 'theme/colors';\nimport { useHistory, useParams } from 'react-router-dom';\nimport textAPI from \"api/textAPI\";\nimport CryptoJS from 'crypto-js';\nimport Part5Item from './shared/Part5Item';\nimport Footer from 'components/Footer';\nimport { getNumber } from 'store/selectors/projectSelectors';\nimport { testAction, increaseAction, updatePartAction } from 'store/actionTypes/actionType';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst ButtonText = styled(Fonts.Bold)`\n  font-size: 18px;\n  background-color: ${Colors.BACKGROUND_COLOR};\n  margin: 10px;\n  padding: 10px;\n`;\n\nconst TestFlatList = styled(FlatList as new () => FlatList<string>)`\n  width: 100%;\n  height: 100%;\n`;\n\nconst Part5: FC = () => {\n  const [testList, setTestList] = useState<any[]>([]);\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { testNumber } = useParams();\n  const testName = `test${testNumber}`;\n\n  useEffect(() => {\n    const part5 = {};\n    getData(testNumber, part5);\n  }, []);\n\n  const valueNumber = useSelector(getNumber);\n  useEffect(() => {\n    console.log(\"Introduction\");\n    dispatch(testAction('name', 'Thieu Mao'));\n    dispatch(increaseAction('number', valueNumber));\n  }, []);\n\n  const getData = async (testNumber: number, part5: any) => {\n    try {\n      textAPI.get(testNumber, 5).then(data => {\n        const plainData = CryptoJS.AES.decrypt(data, 'thieumao').toString(CryptoJS.enc.Utf8);\n        const json = JSON.parse(plainData);\n        console.log('>>>>>>> Part 5');\n        console.log(json);\n        setTestList(json);\n      });\n    } catch (error) {}\n  };\n\n  const updateDatabase = async (testName: string, part5Questions: any[]) => {\n    const part5Detail = {\n      name: 'Part 5',\n      questions: part5Questions,\n    };\n    dispatch(updatePartAction(testName, 'part5', part5Detail));\n  };\n\n  const selectAnswer = (item: any, index: number, selected: string) => {\n    console.log('>>>>>> selectAnswer');\n    console.log(item);\n    console.log(index);\n    console.log(selected);\n  };\n\n  const renderItem = ({ index }: { item; index }) => {\n    const item = testList[index];\n    return (\n      <Part5Item\n        item={item}\n        index={index}\n        visibleIndex={1}\n        onClick={selectAnswer}\n      />\n    );\n  };\n\n  return (\n      <Screen canBack title={`Test ${testNumber} - Part 5`} showMenu>\n        <TestFlatList\n          data={testList}\n          renderItem={renderItem}\n          keyExtractor={(item, index) => `${index}_${item}`}\n        />\n        <Footer correctNumber={1} totalNumber={20} onReset={() => null} onSubmit={() => null} />\n      </Screen>\n  );\n};\n\nexport default Part5;\n"]},"metadata":{},"sourceType":"module"}