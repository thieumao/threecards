{"ast":null,"code":"var _jsxFileName = \"/Users/thieunguyen/Desktop/Project/ReactJS/web-ets-2020/src/components/QuestionListModal/index.tsx\";\nimport React, { memo } from 'react';\nimport styled from 'styled-components/native';\nimport Colors from '../../theme/colors';\nimport Fonts from '../../theme/fonts';\nimport { FlatList } from 'react-native';\nimport Modal from 'modal-react-native-web';\nconst Button = styled.TouchableOpacity`\n  padding: 10px;\n`;\nconst Space = styled.View`\n  margin-top: 1px;\n  background-color: ${Colors.MAIN_COLOR};\n  width: 100%;\n  height: 1px;\n`;\nconst CloseButton = styled.TouchableOpacity`\n  background-color: ${Colors.MAIN_COLOR};\n  padding: 4px;\n  elevation: 2;\n  margin-vertical: 12px;\n`;\nconst ButtonText = styled(Fonts.Bold)`\n  padding: 4px;\n  color: white;\n  text-align: left;\n`;\nconst Text = styled(Fonts.Normal)`\n  padding: 8px;\n  text-align: center;\n`;\nconst CenteredView = styled.View`\n  flex: 1;\n  justify-content: center;\n  align-items: center;\n`;\nconst ModalView = styled.View`\n  background-color: white;\n  justify-content: center;\n  align-items: center;\n  box-shadow: 0px 2px;\n  shadow-color: #000;\n  shadow-opacity: 0.25;\n  shadow-radius: 3.84px;\n  elevation: 5;\n  width: 80%;\n  height: 80%;\n`;\nconst QuestionFlatList = styled(FlatList)`\n  width: 100%;\n  height: 100%;\n`;\nconst ItemContainer = styled.TouchableOpacity`\n  margin-horizontal: 2px;\n  padding-vertical: 4px;\n`;\nconst QuestionItem = styled.View`\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  padding-left: 8px;\n  padding-right: 2px;\n`;\nconst ItemText = styled(Fonts.Normal)`\n  font-size: 14px;\n  background-color: ${Colors.BACKGROUND_COLOR};\n  color: ${props => props.color};\n  flex: 1;\n`;\nconst TitleText = styled(Fonts.Bold)`\n  font-size: 16px;\n  background-color: ${Colors.BACKGROUND_COLOR};\n  padding: 12px;\n`;\n\nconst QuestionListModal = ({\n  modalVisible,\n  setModalVisible\n}) => {\n  return /*#__PURE__*/React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: modalVisible,\n    onBackdropPress: () => setModalVisible(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CenteredView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TitleText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, \"Select Question\"), /*#__PURE__*/React.createElement(CloseButton, {\n    onPress: () => setModalVisible(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ButtonText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, \"Close\")))));\n};\n\nexport default memo(QuestionListModal);","map":{"version":3,"sources":["/Users/thieunguyen/Desktop/Project/ReactJS/web-ets-2020/src/components/QuestionListModal/index.tsx"],"names":["React","memo","styled","Colors","Fonts","FlatList","Modal","Button","TouchableOpacity","Space","View","MAIN_COLOR","CloseButton","ButtonText","Bold","Text","Normal","CenteredView","ModalView","QuestionFlatList","ItemContainer","QuestionItem","ItemText","BACKGROUND_COLOR","props","color","TitleText","QuestionListModal","modalVisible","setModalVisible"],"mappings":";AAAA,OAAOA,KAAP,IAAoBC,IAApB,QAAqD,OAArD;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AAkBA,MAAMC,MAAM,GAAGL,MAAM,CAACM,gBAAiB;;CAAvC;AAIA,MAAMC,KAAK,GAAGP,MAAM,CAACQ,IAAkB;;sBAEjBP,MAAM,CAACQ,UAAW;;;CAFxC;AAOA,MAAMC,WAAW,GAAGV,MAAM,CAACM,gBAAiB;sBACtBL,MAAM,CAACQ,UAAW;;;;CADxC;AAOA,MAAME,UAAU,GAAGX,MAAM,CAACE,KAAK,CAACU,IAAP,CAAa;;;;CAAtC;AAMA,MAAMC,IAAI,GAAGb,MAAM,CAACE,KAAK,CAACY,MAAP,CAAe;;;CAAlC;AAKA,MAAMC,YAAY,GAAGf,MAAM,CAACQ,IAAK;;;;CAAjC;AAMA,MAAMQ,SAAS,GAAGhB,MAAM,CAACQ,IAAK;;;;;;;;;;;CAA9B;AAaA,MAAMS,gBAAgB,GAAGjB,MAAM,CAACG,QAAD,CAAyC;;;CAAxE;AAKA,MAAMe,aAAa,GAAGlB,MAAM,CAACM,gBAAiB;;;CAA9C;AAKA,MAAMa,YAAY,GAAGnB,MAAM,CAACQ,IAAK;;;;;;CAAjC;AAQA,MAAMY,QAAQ,GAAGpB,MAAM,CAACE,KAAK,CAACY,MAAP,CAA4B;;sBAE7Bb,MAAM,CAACoB,gBAAiB;WACnCC,KAAK,IAAIA,KAAK,CAACC,KAAM;;CAHhC;AAOA,MAAMC,SAAS,GAAGxB,MAAM,CAACE,KAAK,CAACU,IAAP,CAAa;;sBAEfX,MAAM,CAACoB,gBAAiB;;CAF9C;;AAMA,MAAMI,iBAA4B,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAAD,KAAuC;AAE1E,sBACE,oBAAC,KAAD;AAAO,IAAA,aAAa,EAAC,OAArB;AAA6B,IAAA,WAAW,MAAxC;AAAyC,IAAA,OAAO,EAAED,YAAlD;AAAgE,IAAA,eAAe,EAAE,MAAMC,eAAe,EAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAE,MAAMA,eAAe,EAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CAFF,CADF,CADF,CADF;AAYD,CAdD;;AAgBA,eAAe5B,IAAI,CAAC0B,iBAAD,CAAnB","sourcesContent":["import React, { FC, memo, useEffect, useState } from 'react';\nimport styled from 'styled-components/native';\nimport Colors from '../../theme/colors';\nimport Fonts from '../../theme/fonts';\nimport { FlatList } from 'react-native';\nimport Modal from 'modal-react-native-web';\n\ninterface Props {\n  modalVisible: boolean;\n  setModalVisible: () => void;\n}\n\ninterface StyledProps {\n  height?: number;\n  width?: number;\n  marginHorizontal?: number;\n  paddidngHorizontal?: number;\n  isCorrect?: boolean;\n  isSelected?: boolean;\n  isShown?: boolean;\n  color?: string;\n}\n\nconst Button = styled.TouchableOpacity`\n  padding: 10px;\n`;\n\nconst Space = styled.View<StyledProps>`\n  margin-top: 1px;\n  background-color: ${Colors.MAIN_COLOR};\n  width: 100%;\n  height: 1px;\n`;\n\nconst CloseButton = styled.TouchableOpacity`\n  background-color: ${Colors.MAIN_COLOR};\n  padding: 4px;\n  elevation: 2;\n  margin-vertical: 12px;\n`;\n\nconst ButtonText = styled(Fonts.Bold)`\n  padding: 4px;\n  color: white;\n  text-align: left;\n`;\n\nconst Text = styled(Fonts.Normal)`\n  padding: 8px;\n  text-align: center;\n`;\n\nconst CenteredView = styled.View`\n  flex: 1;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ModalView = styled.View`\n  background-color: white;\n  justify-content: center;\n  align-items: center;\n  box-shadow: 0px 2px;\n  shadow-color: #000;\n  shadow-opacity: 0.25;\n  shadow-radius: 3.84px;\n  elevation: 5;\n  width: 80%;\n  height: 80%;\n`;\n\nconst QuestionFlatList = styled(FlatList as new () => FlatList<string>)`\n  width: 100%;\n  height: 100%;\n`;\n\nconst ItemContainer = styled.TouchableOpacity`\n  margin-horizontal: 2px;\n  padding-vertical: 4px;\n`;\n\nconst QuestionItem = styled.View`\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  padding-left: 8px;\n  padding-right: 2px;\n`;\n\nconst ItemText = styled(Fonts.Normal)<StyledProps>`\n  font-size: 14px;\n  background-color: ${Colors.BACKGROUND_COLOR};\n  color: ${props => props.color};\n  flex: 1;\n`;\n\nconst TitleText = styled(Fonts.Bold)`\n  font-size: 16px;\n  background-color: ${Colors.BACKGROUND_COLOR};\n  padding: 12px;\n`;\n\nconst QuestionListModal: FC<Props> = ({ modalVisible, setModalVisible }) => {\n\n  return (\n    <Modal animationType=\"slide\" transparent visible={modalVisible} onBackdropPress={() => setModalVisible()}>\n      <CenteredView>\n        <ModalView>\n          <TitleText>Select Question</TitleText>\n          <CloseButton onPress={() => setModalVisible()}>\n            <ButtonText>Close</ButtonText>\n          </CloseButton>\n        </ModalView>\n      </CenteredView>\n    </Modal>\n  );\n};\n\nexport default memo(QuestionListModal);\n"]},"metadata":{},"sourceType":"module"}