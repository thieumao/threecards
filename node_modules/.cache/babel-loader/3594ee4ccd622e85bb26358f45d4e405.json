{"ast":null,"code":"var _jsxFileName = \"/Users/thieunguyen/Desktop/Project/ReactJS/threecards/src/containers/Part3/shared/QuestionItem.tsx\";\nimport React, { memo } from 'react';\nimport { TouchableOpacity } from 'react-native';\nimport styled from 'styled-components/native';\nimport Fonts from '../../../theme/fonts';\nimport Colors from '../../../theme/colors';\nimport { Answer } from '../../../constants/AppConstants';\nimport Divider from '../../../components/Divider';\nconst Text = styled(Fonts.Normal)`\n  font-size: 18px;\n  padding: 8px;\n`;\nconst ItemContainer = styled.View`\n  width: 100%;\n  background-color: ${Colors.SECOND_COLOR};\n  padding-vertical: 4px;\n`;\nconst ButtonText = styled(Fonts.Normal)`\n  font-size: 18px;\n  color: ${props => props.isSelected ? 'green' : 'black'};\n  background-color: ${props => props.isShown ? 'yellow' : Colors.SECOND_COLOR}};\n  padding: 8px;\n`;\n\nconst QuestionItem = ({\n  item,\n  index,\n  onClick\n}) => {\n  return /*#__PURE__*/React.createElement(ItemContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, `${index + 1}/ ${item.question || ''}`), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TouchableOpacity, {\n    onPress: () => onClick(item, index, Answer.A),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ButtonText, {\n    isSelected: Answer.A == item.selected,\n    isShown: item.submitted && Answer.A == item.correct,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, `A. ${item.a}`)), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TouchableOpacity, {\n    onPress: () => onClick(item, index, Answer.B),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ButtonText, {\n    isSelected: Answer.B == item.selected,\n    isShown: item.submitted && Answer.B == item.correct,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, `B. ${item.b}`)), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TouchableOpacity, {\n    onPress: () => onClick(item, index, Answer.C),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ButtonText, {\n    isSelected: Answer.C == item.selected,\n    isShown: item.submitted && Answer.C == item.correct,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, `C. ${item.c}`)), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TouchableOpacity, {\n    onPress: () => onClick(item, index, Answer.D),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ButtonText, {\n    isSelected: Answer.D == item.selected,\n    isShown: item.submitted && Answer.D == item.correct,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, `D. ${item.d}`)), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default memo(QuestionItem);","map":{"version":3,"sources":["/Users/thieunguyen/Desktop/Project/ReactJS/threecards/src/containers/Part3/shared/QuestionItem.tsx"],"names":["React","memo","TouchableOpacity","styled","Fonts","Colors","Answer","Divider","Text","Normal","ItemContainer","View","SECOND_COLOR","ButtonText","props","isSelected","isShown","QuestionItem","item","index","onClick","question","A","selected","submitted","correct","a","B","b","C","c","D","d"],"mappings":"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","sourcesContent":["import React, { FC, memo } from 'react';\nimport { TouchableOpacity } from 'react-native';\nimport styled from 'styled-components/native';\nimport Fonts from '../../../theme/fonts';\nimport Colors from '../../../theme/colors';\nimport { Answer } from '../../../constants/AppConstants';\nimport Divider from '../../../components/Divider';\n\ninterface Props {\n  item: any;\n  index: number;\n  onClick: (item: any, index: number, selected: string) => void;\n}\n\ninterface StyledProps {\n  width?: number;\n  marginHorizontal?: number;\n  paddidngHorizontal?: number;\n  isCorrect?: boolean;\n  isSelected?: boolean;\n  isShown?: boolean;\n}\n\nconst Text = styled(Fonts.Normal)`\n  font-size: 18px;\n  padding: 8px;\n`;\n\nconst ItemContainer = styled.View<Pick<StyledProps, 'width'>>`\n  width: 100%;\n  background-color: ${Colors.SECOND_COLOR};\n  padding-vertical: 4px;\n`;\n\nconst ButtonText = styled(Fonts.Normal)<StyledProps>`\n  font-size: 18px;\n  color: ${props => props.isSelected ? 'green' : 'black'};\n  background-color: ${props => props.isShown ? 'yellow' : Colors.SECOND_COLOR}};\n  padding: 8px;\n`;\n\nconst QuestionItem: FC<Props> = ({ item, index, onClick }) => {\n  return (\n    <ItemContainer>\n      <Text >{`${index + 1}/ ${item.question || ''}`}</Text>\n      <Divider />\n      <TouchableOpacity onPress={() => onClick(item, index, Answer.A)}>\n        <ButtonText isSelected={Answer.A == item.selected} isShown={item.submitted && Answer.A == item.correct}>{`A. ${item.a}`}</ButtonText>\n      </TouchableOpacity>\n      <Divider />\n      <TouchableOpacity onPress={() => onClick(item, index, Answer.B)}>\n        <ButtonText isSelected={Answer.B == item.selected} isShown={item.submitted && Answer.B == item.correct}>{`B. ${item.b}`}</ButtonText>\n      </TouchableOpacity>\n      <Divider />\n      <TouchableOpacity onPress={() => onClick(item, index, Answer.C)}>\n        <ButtonText isSelected={Answer.C == item.selected} isShown={item.submitted && Answer.C == item.correct}>{`C. ${item.c}`}</ButtonText>\n      </TouchableOpacity>\n      <Divider />\n      <TouchableOpacity onPress={() => onClick(item, index, Answer.D)}>\n        <ButtonText isSelected={Answer.D == item.selected} isShown={item.submitted && Answer.D == item.correct}>{`D. ${item.d}`}</ButtonText>\n      </TouchableOpacity>\n      <Divider />\n  </ItemContainer>\n  );\n};\n\nexport default memo(QuestionItem);\n"]},"metadata":{},"sourceType":"module"}