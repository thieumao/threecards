{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/thieunguyen/Desktop/Project/ReactJS/web-ets-2020/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject6(){var data=_taggedTemplateLiteral([\"\\n  margin: 12px;\\n\"]);_templateObject6=function _templateObject6(){return data;};return data;}function _templateObject5(){var data=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: 100%;\\n\"]);_templateObject5=function _templateObject5(){return data;};return data;}function _templateObject4(){var data=_taggedTemplateLiteral([\"\\n  font-size: 18px;\\n  color: \",\";\\n  background-color: \",\";\\n  padding: 8px;\\n\"]);_templateObject4=function _templateObject4(){return data;};return data;}function _templateObject3(){var data=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  background-color: \",\";\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n  padding-horizontal: 4px;\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  font-size: 18px;\\n  padding: 8px;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{memo}from'react';import{TouchableOpacity}from'react-native';import styled from'styled-components/native';import Fonts from'../../../theme/fonts';import Colors from'../../../theme/colors';import{Answer}from'../../../constants/AppConstants';import Divider from'../../../components/Divider';import RawHTML from'../../../components/RawHTML';var Text=styled(Fonts.Bold)(_templateObject());var ScrollView=styled.ScrollView(_templateObject2());var ItemContainer=styled.View(_templateObject3(),Colors.SECOND_COLOR);var ButtonText=styled(Fonts.Normal)(_templateObject4(),function(props){return props.isSelected?'green':'black';},function(props){return props.isShown?'yellow':Colors.SECOND_COLOR;});var EmptyView=styled.View(_templateObject5());var HTMLContainer=styled.View(_templateObject6());var Part1Item=function Part1Item(_ref){var item=_ref.item,index=_ref.index,visibleIndex=_ref.visibleIndex,onClickA=_ref.onClickA,onClickB=_ref.onClickB,onClickC=_ref.onClickC,onClickD=_ref.onClickD;// render Empty View\n// if (index < visibleIndex - 1 || index > visibleIndex + 1) {\n//   return (\n//     <ItemContainer width={itemWidth} height={Dimensions.get('window').height}>\n//       <EmptyView />\n//     </ItemContainer>\n//   );\n// }\nreturn/*#__PURE__*/React.createElement(ItemContainer,null,/*#__PURE__*/React.createElement(ScrollView,null,/*#__PURE__*/React.createElement(Text,null,\"\".concat(index+1,\"/\")),/*#__PURE__*/React.createElement(Divider,null),/*#__PURE__*/React.createElement(TouchableOpacity,{onPress:function onPress(){return onClickA(item,index,Answer.A);}},/*#__PURE__*/React.createElement(ButtonText,{isSelected:Answer.A==item.selected,isShown:item.submitted&&Answer.A==item.correct},\"A. \".concat(item.a))),/*#__PURE__*/React.createElement(Divider,null),/*#__PURE__*/React.createElement(TouchableOpacity,{onPress:function onPress(){return onClickB(item,index,Answer.B);}},/*#__PURE__*/React.createElement(ButtonText,{isSelected:Answer.B==item.selected,isShown:item.submitted&&Answer.B==item.correct},\"B. \".concat(item.b))),/*#__PURE__*/React.createElement(Divider,null),/*#__PURE__*/React.createElement(TouchableOpacity,{onPress:function onPress(){return onClickC(item,index,Answer.C);}},/*#__PURE__*/React.createElement(ButtonText,{isSelected:Answer.C==item.selected,isShown:item.submitted&&Answer.C==item.correct},\"C. \".concat(item.c))),/*#__PURE__*/React.createElement(Divider,null),/*#__PURE__*/React.createElement(TouchableOpacity,{onPress:function onPress(){return onClickD(item,index,Answer.D);}},/*#__PURE__*/React.createElement(ButtonText,{isSelected:Answer.D==item.selected,isShown:item.submitted&&Answer.D==item.correct},\"D. \".concat(item.d))),/*#__PURE__*/React.createElement(Divider,null),item.submitted&&item.html&&/*#__PURE__*/React.createElement(HTMLContainer,null,/*#__PURE__*/React.createElement(RawHTML,null,item.html))));};export default memo(Part1Item);","map":{"version":3,"sources":["/Users/thieunguyen/Desktop/Project/ReactJS/web-ets-2020/src/containers/Part1/shared/Part1Item.tsx"],"names":["React","memo","TouchableOpacity","styled","Fonts","Colors","Answer","Divider","RawHTML","Text","Bold","ScrollView","ItemContainer","View","SECOND_COLOR","ButtonText","Normal","props","isSelected","isShown","EmptyView","HTMLContainer","Part1Item","item","index","visibleIndex","onClickA","onClickB","onClickC","onClickD","A","selected","submitted","correct","a","B","b","C","c","D","d","html"],"mappings":"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","sourcesContent":["import React, { FC, memo } from 'react';\nimport { TouchableOpacity, Dimensions } from 'react-native';\nimport styled from 'styled-components/native';\nimport Fonts from '../../../theme/fonts';\nimport Colors from '../../../theme/colors';\nimport { Answer } from '../../../constants/AppConstants';\nimport Divider from '../../../components/Divider';\nimport RawHTML from '../../../components/RawHTML';\n\ninterface Props {\n  item: any;\n  index: number;\n  visibleIndex: number;\n  onClickA: (item: any, index: number, selected: string) => void;\n  onClickB: (item: any, index: number, selected: string) => void;\n  onClickC: (item: any, index: number, selected: string) => void;\n  onClickD: (item: any, index: number, selected: string) => void;\n}\n\ninterface StyledProps {\n  width?: number;\n  height?: number;\n  marginHorizontal?: number;\n  paddingHorizontal?: number;\n  paddingRight?: number;\n  isCorrect?: boolean;\n  isSelected?: boolean;\n  isShown?: boolean;\n}\n\nconst Text = styled(Fonts.Bold)`\n  font-size: 18px;\n  padding: 8px;\n`;\n\nconst ScrollView = styled.ScrollView`\n  padding-horizontal: 4px;\n`;\n\nconst ItemContainer = styled.View<StyledProps>`\n  width: 100%;\n  background-color: ${Colors.SECOND_COLOR};\n`;\n\nconst ButtonText = styled(Fonts.Normal) <StyledProps>`\n  font-size: 18px;\n  color: ${props => props.isSelected ? 'green' : 'black'};\n  background-color: ${props => props.isShown ? 'yellow' : Colors.SECOND_COLOR};\n  padding: 8px;\n`;\n\nconst EmptyView = styled.View`\n  width: 100%;\n  height: 100%;\n`;\n\nconst HTMLContainer = styled.View`\n  margin: 12px;\n`;\n\nconst Part1Item: FC<Props> = ({ item, index, visibleIndex, onClickA, onClickB, onClickC, onClickD }) => {\n  // render Empty View\n  // if (index < visibleIndex - 1 || index > visibleIndex + 1) {\n  //   return (\n  //     <ItemContainer width={itemWidth} height={Dimensions.get('window').height}>\n  //       <EmptyView />\n  //     </ItemContainer>\n  //   );\n  // }\n  return (\n    <ItemContainer>\n      <ScrollView>\n        <Text >{`${index + 1}/`}</Text>\n        <Divider />\n        <TouchableOpacity onPress={() => onClickA(item, index, Answer.A)}>\n          <ButtonText isSelected={Answer.A == item.selected} isShown={item.submitted && Answer.A == item.correct}>{`A. ${item.a}`}</ButtonText>\n        </TouchableOpacity>\n        <Divider />\n        <TouchableOpacity onPress={() => onClickB(item, index, Answer.B)}>\n          <ButtonText isSelected={Answer.B == item.selected} isShown={item.submitted && Answer.B == item.correct}>{`B. ${item.b}`}</ButtonText>\n        </TouchableOpacity>\n        <Divider />\n        <TouchableOpacity onPress={() => onClickC(item, index, Answer.C)}>\n          <ButtonText isSelected={Answer.C == item.selected} isShown={item.submitted && Answer.C == item.correct}>{`C. ${item.c}`}</ButtonText>\n        </TouchableOpacity>\n        <Divider />\n        <TouchableOpacity onPress={() => onClickD(item, index, Answer.D)}>\n          <ButtonText isSelected={Answer.D == item.selected} isShown={item.submitted && Answer.D == item.correct}>{`D. ${item.d}`}</ButtonText>\n        </TouchableOpacity>\n        <Divider />\n        {item.submitted && item.html && (\n          <HTMLContainer>\n            <RawHTML>{item.html}</RawHTML>\n          </HTMLContainer>\n        )}\n      </ScrollView>\n    </ItemContainer>\n  );\n};\n\nexport default memo(Part1Item);\n"]},"metadata":{},"sourceType":"module"}