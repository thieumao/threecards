{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nimport { REHYDRATE } from './constants';\nimport getStoredState from './getStoredState';\nimport createPersistor from './createPersistor';\nimport setImmediate from './utils/setImmediate';\nexport default function persistStore(store) {\n  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var onComplete = arguments[2]; // defaults\n  // @TODO remove shouldRestore\n\n  var shouldRestore = !config.skipRestore;\n  if (process.env.NODE_ENV !== 'production' && config.skipRestore) console.warn('redux-persist: config.skipRestore has been deprecated. If you want to skip restoration use `createPersistor` instead');\n  var purgeKeys = null; // create and pause persistor\n\n  var persistor = createPersistor(store, config);\n  persistor.pause(); // restore\n\n  if (shouldRestore) {\n    setImmediate(function () {\n      getStoredState(config, function (err, restoredState) {\n        if (err) {\n          complete(err);\n          return;\n        } // do not persist state for purgeKeys\n\n\n        if (purgeKeys) {\n          if (purgeKeys === '*') restoredState = {};else purgeKeys.forEach(function (key) {\n            return delete restoredState[key];\n          });\n        }\n\n        try {\n          store.dispatch(rehydrateAction(restoredState, err));\n        } finally {\n          complete(err, restoredState);\n        }\n      });\n    });\n  } else setImmediate(complete);\n\n  function complete(err, restoredState) {\n    persistor.resume();\n    onComplete && onComplete(err, restoredState);\n  }\n\n  return _extends({}, persistor, {\n    purge: function purge(keys) {\n      purgeKeys = keys || '*';\n      return persistor.purge(keys);\n    }\n  });\n}\n\nfunction rehydrateAction(payload) {\n  var error = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  return {\n    type: REHYDRATE,\n    payload: payload,\n    error: error\n  };\n}","map":{"version":3,"sources":["/Users/thieunguyen/Desktop/Project/ReactJS/web-ets-2020/node_modules/redux-offline/node_modules/redux-persist/es/persistStore.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","REHYDRATE","getStoredState","createPersistor","setImmediate","persistStore","store","config","undefined","onComplete","shouldRestore","skipRestore","process","env","NODE_ENV","console","warn","purgeKeys","persistor","pause","err","restoredState","complete","forEach","dispatch","rehydrateAction","resume","purge","keys","payload","error","type"],"mappings":"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","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nimport { REHYDRATE } from './constants';\nimport getStoredState from './getStoredState';\nimport createPersistor from './createPersistor';\nimport setImmediate from './utils/setImmediate';\n\nexport default function persistStore(store) {\n  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var onComplete = arguments[2];\n\n  // defaults\n  // @TODO remove shouldRestore\n  var shouldRestore = !config.skipRestore;\n  if (process.env.NODE_ENV !== 'production' && config.skipRestore) console.warn('redux-persist: config.skipRestore has been deprecated. If you want to skip restoration use `createPersistor` instead');\n\n  var purgeKeys = null;\n\n  // create and pause persistor\n  var persistor = createPersistor(store, config);\n  persistor.pause();\n\n  // restore\n  if (shouldRestore) {\n    setImmediate(function () {\n      getStoredState(config, function (err, restoredState) {\n        if (err) {\n          complete(err);\n          return;\n        }\n        // do not persist state for purgeKeys\n        if (purgeKeys) {\n          if (purgeKeys === '*') restoredState = {};else purgeKeys.forEach(function (key) {\n            return delete restoredState[key];\n          });\n        }\n        try {\n          store.dispatch(rehydrateAction(restoredState, err));\n        } finally {\n          complete(err, restoredState);\n        }\n      });\n    });\n  } else setImmediate(complete);\n\n  function complete(err, restoredState) {\n    persistor.resume();\n    onComplete && onComplete(err, restoredState);\n  }\n\n  return _extends({}, persistor, {\n    purge: function purge(keys) {\n      purgeKeys = keys || '*';\n      return persistor.purge(keys);\n    }\n  });\n}\n\nfunction rehydrateAction(payload) {\n  var error = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n  return {\n    type: REHYDRATE,\n    payload: payload,\n    error: error\n  };\n}"]},"metadata":{},"sourceType":"module"}