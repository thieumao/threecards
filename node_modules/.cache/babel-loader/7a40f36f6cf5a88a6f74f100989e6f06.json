{"ast":null,"code":"import _slicedToArray from\"/Users/thieunguyen/Desktop/Project/ReactJS/web-ets-2020/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';var useWindowDimensions=function useWindowDimensions(){var hasWindow=typeof window!=='undefined';function getWindowDimensions(){var width=hasWindow?window.innerWidth:null;var height=hasWindow?window.innerHeight:null;return{width:width,height:height};}var _useState=useState(getWindowDimensions()),_useState2=_slicedToArray(_useState,2),windowDimensions=_useState2[0],setWindowDimensions=_useState2[1];useEffect(function(){if(hasWindow){function handleResize(){setWindowDimensions(getWindowDimensions());}window.addEventListener('resize',handleResize);return function(){return window.removeEventListener('resize',handleResize);};}},[hasWindow]);return windowDimensions;};export default useWindowDimensions;","map":{"version":3,"sources":["/Users/thieunguyen/Desktop/Project/ReactJS/web-ets-2020/src/hooks/useWindowDimensions.js"],"names":["useState","useEffect","useWindowDimensions","hasWindow","window","getWindowDimensions","width","innerWidth","height","innerHeight","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener"],"mappings":"8KAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CAEA,GAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,EAAM,CAEhC,GAAMC,CAAAA,SAAS,CAAG,MAAOC,CAAAA,MAAP,GAAkB,WAApC,CAEA,QAASC,CAAAA,mBAAT,EAA+B,CAC7B,GAAMC,CAAAA,KAAK,CAAGH,SAAS,CAAGC,MAAM,CAACG,UAAV,CAAuB,IAA9C,CACA,GAAMC,CAAAA,MAAM,CAAGL,SAAS,CAAGC,MAAM,CAACK,WAAV,CAAwB,IAAhD,CACA,MAAO,CACLH,KAAK,CAALA,KADK,CAELE,MAAM,CAANA,MAFK,CAAP,CAID,CAX+B,cAagBR,QAAQ,CAACK,mBAAmB,EAApB,CAbxB,wCAazBK,gBAbyB,eAaPC,mBAbO,eAehCV,SAAS,CAAC,UAAM,CACd,GAAIE,SAAJ,CAAe,CACb,QAASS,CAAAA,YAAT,EAAwB,CACtBD,mBAAmB,CAACN,mBAAmB,EAApB,CAAnB,CACD,CAEDD,MAAM,CAACS,gBAAP,CAAwB,QAAxB,CAAkCD,YAAlC,EACA,MAAO,kBAAMR,CAAAA,MAAM,CAACU,mBAAP,CAA2B,QAA3B,CAAqCF,YAArC,CAAN,EAAP,CACD,CACF,CATQ,CASN,CAACT,SAAD,CATM,CAAT,CAWA,MAAOO,CAAAA,gBAAP,CACD,CA3BD,CA6BA,cAAeR,CAAAA,mBAAf","sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useWindowDimensions = () => {\n\n  const hasWindow = typeof window !== 'undefined';\n\n  function getWindowDimensions() {\n    const width = hasWindow ? window.innerWidth : null;\n    const height = hasWindow ? window.innerHeight : null;\n    return {\n      width,\n      height,\n    };\n  }\n\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    if (hasWindow) {\n      function handleResize() {\n        setWindowDimensions(getWindowDimensions());\n      }\n\n      window.addEventListener('resize', handleResize);\n      return () => window.removeEventListener('resize', handleResize);\n    }\n  }, [hasWindow]);\n\n  return windowDimensions;\n}\n\nexport default useWindowDimensions;"]},"metadata":{},"sourceType":"module"}