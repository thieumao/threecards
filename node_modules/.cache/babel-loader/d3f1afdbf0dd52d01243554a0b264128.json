{"ast":null,"code":"var _jsxFileName = \"/Users/thieunguyen/Desktop/Project/ReactJS/threecards/src/containers/Part6/shared/Part6Item.tsx\";\nimport React, { memo } from 'react';\nimport { Dimensions, FlatList } from 'react-native';\nimport styled from 'styled-components/native';\nimport Fonts from '../../../theme/fonts';\nimport Colors from '../../../theme/colors';\nimport QuestionItem from './QuestionItem';\nimport RawHTML from '../../../components/RawHTML';\nconst ItemContainer = styled.View`\n  width: 100%;\n  background-color: ${Colors.SECOND_COLOR};\n`;\nconst Text = styled(Fonts.Bold)`\n  font-size: 18px;\n  padding: 8px;\n`;\nconst TestFlatList = styled(FlatList)`\n  width: 100%;\n  height: 100%;\n`;\nconst ListContainer = styled.View`\n  height: 100%;\n  width: 100%;  \n  padding-vertical: 8px;\n`;\nconst Space = styled.View`\n  background-color: ${Colors.MAIN_COLOR};\n  width: 100%;\n  height: 1px;\n`;\nconst Divider = styled.View`\n  background-color: ${Colors.MAIN_COLOR};\n  width: 100%;\n  height: 2px;\n  margin-top: 8px;\n  margin-bottom: 8px;\n`;\nconst HTMLContainer = styled.View`\n  padding-horizontal: 12px;\n  padding-bottom: 8px;\n`;\n\nconst Part6Item = ({\n  data,\n  part6Index,\n  onSelectAnswer,\n  onCollapse,\n  onCollapseTranslation\n}) => {\n  const selectAnswer = (item, index, selected) => {\n    onSelectAnswer(item, index, selected, part6Index);\n  };\n\n  const renderItem = ({\n    index\n  }) => {\n    const item = data.questions[index];\n    const screenWidth = Dimensions.get('window').width;\n    return /*#__PURE__*/React.createElement(QuestionItem, {\n      item: item,\n      index: index,\n      onClick: selectAnswer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(ItemContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, `${part6Index + 1}/ ${data.data.title || ''}`), !data.isCollapsed && /*#__PURE__*/React.createElement(HTMLContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(RawHTML, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, data.data.html)), data.isShownTranslate && /*#__PURE__*/React.createElement(Space, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 35\n    }\n  }), data.isShownTranslate && !data.isCollapsedTranslation && /*#__PURE__*/React.createElement(HTMLContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(RawHTML, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, data.translate.value)), /*#__PURE__*/React.createElement(Space, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ListContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TestFlatList, {\n    data: data.questions,\n    renderItem: renderItem,\n    keyExtractor: (item, index) => `${index}_${item.question}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  })), 3 > part6Index && /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 28\n    }\n  }));\n};\n\nexport default memo(Part6Item);","map":{"version":3,"sources":["/Users/thieunguyen/Desktop/Project/ReactJS/threecards/src/containers/Part6/shared/Part6Item.tsx"],"names":["React","memo","Dimensions","FlatList","styled","Fonts","Colors","QuestionItem","RawHTML","ItemContainer","View","SECOND_COLOR","Text","Bold","TestFlatList","ListContainer","Space","MAIN_COLOR","Divider","HTMLContainer","Part6Item","data","part6Index","onSelectAnswer","onCollapse","onCollapseTranslation","selectAnswer","item","index","selected","renderItem","questions","screenWidth","get","width","title","isCollapsed","html","isShownTranslate","isCollapsedTranslation","translate","value","question"],"mappings":"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","sourcesContent":["import React, { FC, memo } from 'react';\nimport { Dimensions, FlatList } from 'react-native';\nimport styled from 'styled-components/native';\nimport Fonts from '../../../theme/fonts';\nimport Colors from '../../../theme/colors';\nimport QuestionItem from './QuestionItem';\nimport RawHTML from '../../../components/RawHTML';\n\ninterface Props {\n  data: any;\n  part6Index: number;\n  onSelectAnswer: (detailItem: any, questionPosition: number, selected: string, part6Index: number) => void;\n  onCollapse: (part6Index: number) => void;\n  onCollapseTranslation: (part6Index: number) => void;\n}\n\ninterface StyledProps {\n  height?: number;\n  width?: number;\n  marginHorizontal?: number;\n  paddingHorizontal?: number;\n  paddingRight?: number;\n  isCorrect?: boolean;\n  isSelected?: boolean;\n  isShown?: boolean;\n}\n\ninterface ItemType {\n  id: number;\n  a: string;\n  b: string;\n  c: string;\n  d: string;\n  correct: string;\n  question: string;\n  selected?: string;\n  submitted?: boolean;\n}\n\nconst ItemContainer = styled.View<StyledProps>`\n  width: 100%;\n  background-color: ${Colors.SECOND_COLOR};\n`;\n\nconst Text = styled(Fonts.Bold)`\n  font-size: 18px;\n  padding: 8px;\n`;\n\nconst TestFlatList = styled(FlatList as new () => FlatList<ItemType>)`\n  width: 100%;\n  height: 100%;\n`;\n\nconst ListContainer = styled.View`\n  height: 100%;\n  width: 100%;  \n  padding-vertical: 8px;\n`;\n\nconst Space = styled.View<StyledProps>`\n  background-color: ${Colors.MAIN_COLOR};\n  width: 100%;\n  height: 1px;\n`;\n\nconst Divider = styled.View<StyledProps>`\n  background-color: ${Colors.MAIN_COLOR};\n  width: 100%;\n  height: 2px;\n  margin-top: 8px;\n  margin-bottom: 8px;\n`;\n\nconst HTMLContainer = styled.View`\n  padding-horizontal: 12px;\n  padding-bottom: 8px;\n`;\n\nconst Part6Item: FC<Props> = ({\n  data,\n  part6Index,\n  onSelectAnswer,\n  onCollapse,\n  onCollapseTranslation,\n}) => {\n  const selectAnswer = (item: any, index: number, selected: string) => {\n    onSelectAnswer(item, index, selected, part6Index);\n  };\n\n  const renderItem = ({ index }: { item: ItemType; index: number }) => {\n    const item = data.questions[index];\n    const screenWidth = Dimensions.get('window').width;\n    return (\n      <QuestionItem\n        item={item}\n        index={index}\n        onClick={selectAnswer}\n      />\n    );\n  };\n\n  return (\n    <ItemContainer>\n        <Text>{`${part6Index + 1}/ ${data.data.title || ''}`}</Text>\n        {!data.isCollapsed && (\n          <HTMLContainer>\n            <RawHTML>{data.data.html}</RawHTML>\n          </HTMLContainer>\n        )}\n        {data.isShownTranslate && <Space />}\n        {data.isShownTranslate && !data.isCollapsedTranslation && (\n          <HTMLContainer>\n            <RawHTML>{data.translate.value}</RawHTML>\n          </HTMLContainer>\n        )}\n        <Space />\n        <ListContainer>\n          <TestFlatList\n            data={data.questions}\n            renderItem={renderItem}\n            keyExtractor={(item, index) => `${index}_${item.question}`}\n          />\n        </ListContainer>\n        {3 > part6Index && <Divider />}\n    </ItemContainer>\n  );\n};\n\nexport default memo(Part6Item);\n"]},"metadata":{},"sourceType":"module"}